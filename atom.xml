<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sunshj&#39;s Blog</title>
  
  
  <link href="https://me.sunshj.top/atom.xml" rel="self"/>
  
  <link href="https://me.sunshj.top/"/>
  <updated>2022-04-14T05:22:58.171Z</updated>
  <id>https://me.sunshj.top/</id>
  
  <author>
    <name>sunshj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker+青龙面板部署京东签到脚本</title>
    <link href="https://me.sunshj.top/archives/jdscf-docker-ql/"/>
    <id>https://me.sunshj.top/archives/jdscf-docker-ql/</id>
    <published>2022-04-14T05:16:27.921Z</published>
    <updated>2022-04-14T05:22:58.171Z</updated>
    
    <content type="html"><![CDATA[<p>此篇使用Docker+青龙面板运行京东签到脚本<span id="more"></span></p><h2 id="一、安装Docker"><a href="#一、安装Docker" class="headerlink" title="一、安装Docker"></a>一、安装Docker</h2><h3 id="1、更新"><a href="#1、更新" class="headerlink" title="1、更新"></a>1、更新</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><h3 id="2、安装依赖"><a href="#2、安装依赖" class="headerlink" title="2、安装依赖"></a>2、安装依赖</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum -y install git-core</span><br></pre></td></tr></table></figure><h3 id="3、安装Docker"><a href="#3、安装Docker" class="headerlink" title="3、安装Docker"></a>3、安装Docker</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo yum check-update</span><br><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><h2 id="二、安装青龙面板-用于定时执行脚本"><a href="#二、安装青龙面板-用于定时执行脚本" class="headerlink" title="二、安装青龙面板(用于定时执行脚本):"></a>二、安装青龙面板(用于定时执行脚本):</h2><ol><li>运行青龙面板Docker镜像</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit -v <span class="variable">$PWD</span>/ql/config:/ql/config -v <span class="variable">$PWD</span>/ql/log:/ql/log -v <span class="variable">$PWD</span>/ql/db:/ql/db -p 5600:5600 --name qinglong --hostname qinglong --restart always whyour/qinglong:latest</span><br></pre></td></tr></table></figure><ol start="2"><li>在浏览器访问127.0.0.1:5600, 按照提示完成初始化</li></ol><h2 id="三、创建任务"><a href="#三、创建任务" class="headerlink" title="三、创建任务"></a>三、创建任务</h2><p>在青龙面板<strong>右上角点击新建任务</strong>, 配置:</p><ul><li><p>命令: </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://github.com/cweijan/JD_tencent_scf.git <span class="string">&quot;src&quot;</span> <span class="string">&quot;test|new|test_index&quot;</span> <span class="string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>定时规则: <code>50 */2 * * *</code></p></li></ul><h2 id="四、配置文件"><a href="#四、配置文件" class="headerlink" title="四、配置文件"></a>四、配置文件</h2><p>添加: <code>export PT_KEY=&quot;&quot;;</code>和<code>export PT_PIN=&quot;&quot;;</code>，如果是多个用户使用：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JD_COOKIE=<span class="string">&quot;pt_key=XXX;pt_pin=XXX;&amp;pt_key=XXX;pt_pin=XXX;&quot;</span></span><br></pre></td></tr></table></figure><p>获取京东cookie：访问 <a class="link"   href="https://plogin.m.jd.com/login/login" >https://plogin.m.jd.com/login/login<i class="fas fa-external-link-alt"></i></a> ，手机号登录获取cookie中的 <code>pt_key</code>, <code>pt_pin</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇使用Docker+青龙面板运行京东签到脚本</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Linux" scheme="https://me.sunshj.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>TIM修改个人文件夹位置</title>
    <link href="https://me.sunshj.top/archives/tim-setting/"/>
    <id>https://me.sunshj.top/archives/tim-setting/</id>
    <published>2022-04-11T03:16:34.699Z</published>
    <updated>2022-04-11T03:19:44.791Z</updated>
    
    <content type="html"><![CDATA[<p>TIM无法修改个人文件夹位置的解决方法</p><span id="more"></span><ol><li><p>打开TIM设置界面，找到个人文件夹设置的地方，点击“打开个人文件夹”按钮，会打开当前的个人文件夹。</p></li><li><p>完全退出TIM。</p></li><li><p>到个人文件夹的上一层目录，把里面的QQ号码文件夹和All Users文件夹移动或复制到新的个人文件夹位置，比如 <code>D:\TIM\Tencent Files</code> 目录下。</p></li><li><p>进入 <code>C:\Users\Public\Documents\Tencent\QQ</code> 目录（如果没有这个目录，请自行创建，Windows10中文版可能是<code>C盘&gt;用户&gt;公用&gt;公用文档</code>），在该目录下右键新建文本文件，并重命名为<code>UserDataInfo.ini</code></p></li><li><p>双击打开 <code>UserDataInfo.ini</code> 文件，将下列内容复制粘贴进去，<code>UserDataSavePath=D:\TIM\Tencent Files</code>  这里就是指定新的个人文件夹位置，保存并关闭。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[UserDataImportSet]</span><br><span class="line">NeedImport=0</span><br><span class="line">OldVersion=</span><br><span class="line">OldVerDataPathType=</span><br><span class="line">OldVerDataPath=</span><br><span class="line">OldQQInstallPath=C:\Program Files (x86)\Tencent\QQ</span><br><span class="line">[UserDataSet]</span><br><span class="line">UserDataSavePathType=2</span><br><span class="line">UserDataSavePath=D:\TIM\Tencent Files</span><br><span class="line">NewVersion=</span><br></pre></td></tr></table></figure><ol start="6"><li>重新启动TIM，打开配置界面，就可以看到修改已经生效了。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;TIM无法修改个人文件夹位置的解决方法&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>HTML中使footer保持在页面底部</title>
    <link href="https://me.sunshj.top/archives/html-footer/"/>
    <id>https://me.sunshj.top/archives/html-footer/</id>
    <published>2022-03-16T08:44:23.630Z</published>
    <updated>2022-03-26T03:14:14.924Z</updated>
    
    <content type="html"><![CDATA[<p>当页面中主体内容不够多、无法将内容区域撑开时，会在 footer 下面留下一大块空白。但是又希望footer能在窗口最底端。下面两种方法可以完美解决这个问题<span id="more"></span></p><h1 id="HTML中使footer保持在页面底部"><a href="#HTML中使footer保持在页面底部" class="headerlink" title="HTML中使footer保持在页面底部"></a>HTML中使footer保持在页面底部</h1><blockquote><p>本文转载自CSDN - <strong><a class="link"   href="https://blog.csdn.net/m0_38099607/article/details/71598423" >NINE-NINE<i class="fas fa-external-link-alt"></i></a></strong> </p></blockquote><h2 id="一、footer高度固定-绝对定位"><a href="#一、footer高度固定-绝对定位" class="headerlink" title="一、footer高度固定+绝对定位"></a>一、footer高度固定+绝对定位</h2><p>思路：footer的父层的最小高度是100%，footer设置成相对于父层位置绝对（absolute）置底（bottom：0），父层内要预留（padding-bottom）footer的高度。</p><p>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>HEADER<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>MAIN<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>FOOTER<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="comment">/*保证footer是相对于container位置绝对定位*/</span></span><br><span class="line">    <span class="attribute">position</span>:relative;  </span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">100%</span>; </span><br><span class="line">    <span class="comment">/*设置padding-bottom值大于等于footer的height值，以保证main的内容能够全部显示出来而不被footer遮盖；*/</span>  </span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">100px</span>;  </span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;   <span class="comment">/* footer的高度一定要是固定值*/</span> </span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在main区域设置了浮动啥的你会发现footer固定在页面可视区的底部，且覆盖在内容上，这时候只要在footer的父元素样式上增加（overflow : hidden；）即可；</p><h2 id="二、采用-flexbox布局模型"><a href="#二、采用-flexbox布局模型" class="headerlink" title="二、采用 flexbox布局模型"></a>二、采用 flexbox布局模型</h2><p>思路：我们将 body 的 display 属性设置为 flex, 然后将方向属性设置为列, （默认是行，也就是横向布局）；同时，将html 和 body 元素的高度设置为100%，使其充满整个屏幕。</p><p>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>HEADER<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>MAIN<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>FOOTER<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS代码：<br>我们需要调整各个区域占用的页面空间，我们将通过flex 属性来达到这一目的，该属性实际包含了三个属性，分别是：<br>（1）<code>flex-grow</code>：元素在同一容器中对可分配空间的分配比率，及扩展比率；<br>（2）<code>flex-shrink</code>：如果空间不足，元素的收缩比率；<br>（3）<code>flex-basis</code>：元素的伸缩基准值；</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: orange;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;当页面中主体内容不够多、无法将内容区域撑开时，会在 footer 下面留下一大块空白。但是又希望footer能在窗口最底端。下面两种方法可以完美解决这个问题</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>计算机二级公共基础知识笔记</title>
    <link href="https://me.sunshj.top/archives/ncre-notes/"/>
    <id>https://me.sunshj.top/archives/ncre-notes/</id>
    <published>2022-03-13T07:28:07.744Z</published>
    <updated>2022-03-13T07:42:40.994Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载自<a class="link" href="https://zhuanlan.zhihu.com/p/100698395">知乎<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、数据结构与算法"><a href="#一、数据结构与算法" class="headerlink" title="一、数据结构与算法"></a>一、数据结构与算法</h2><ol><li><p>算法的基本运算和操作：算术运算，逻辑运算，<strong>关系运算</strong>，<strong>数据传输</strong>。</p></li><li><p>算法基本设计方法：列举法、归纳法、递推、递归、减半递推技术。</p></li><li><p><strong>数据元素</strong>：数据元素是<strong>数据的基本单位</strong>。</p></li><li><p><strong>数据对象</strong>：数据对象是<strong>性质相同的数据元素的集合</strong>。</p></li><li><p><strong>数据结构</strong>：是指由某一<strong>数据对象中所有数据成员之间的关系组成的集合</strong>。</p></li><li><p>数据的逻辑结构包括数据对象和数据对象之间的关系。</p></li><li><p>数据的存储结构包括数据元素的存储方式和关系的存储方式。</p></li><li><p><strong>一种数据的逻辑结构</strong>可以表示成<strong>多种存储结构。</strong></p></li><li><p><strong>线性结构</strong>的条件（一个非空数据结构)：<br>（1）有且只有一个根结点；<br>（2）每一个结点最多有一个前件，也最多有一个后件。</p></li><li><p>栈、队列、<strong>双向链表</strong>是线性结构；树、二叉树为非线性结构。</p></li><li><p><strong>线性表</strong>是由一组数据元素构成，数据元素的位置只取决于自己的序号，元素之间的相对位置是线性的。具有“<strong>一对一</strong>”逻辑关系的数据，最佳的存储方式是使用线性表。除根结点与终端结点外，其他所有结点有且只有一个前件，也有且只有一个后件。</p></li><li><p>线性表的存储结构：<strong>顺序存储结构</strong>和<strong>链式存储结构</strong>。</p></li><li><p><strong>线性表的顺序存储结构</strong>有两个特点：<br>（1）线性表中所有元素所占的存储空间连续；<br>（2）线性表中各数据元素在存储空间中是按逻辑顺序依次存放的。</p></li><li><p>线性表的链式存储结构存储数据结构的存储空间可以不连续，各数据结点的存储顺序与数据元素之间的逻辑关系可以不一致。结点包含：<strong>数据域</strong>、<strong>指针域</strong>。（注：链式存储方式既可用于表示线性结构，也可用于表示非线性结构）。</p></li><li><p><strong>栈</strong>和<strong>队列</strong>隶属于线性表，是特殊的线性表，因为它们对线性表中元素的进出做了明确的要求。</p></li><li><p><strong>栈</strong>具有<strong>记忆功能</strong>，队列没有记忆功能。栈的特点是先进后出,后进先出,所以对一个栈进行出栈操作,出来的元素肯定是最后存入栈中的元素,所以栈有记忆功能。而队列是先进先出,取队列的第一个元素,得到的是最先存入队列的元素,而不是上一个存入队列的元素,所以没有记忆功能。</p></li><li><p>栈、队列的存储结构：<br>（1）顺序存储结构：用一组地址连续的存储单元即一维数组来存储；<br>（2）链式存储：线性链表。</p></li><li><p>计算循环队列的元素个数：“尾指针减头指针”，若为负数，再加其容量即可。</p></li><li><p>树是 n(n&gt;0) 个结点的有限集合，是一种非线性结构。</p></li><li><p>结点的度：结点所拥有的子树的个数。</p></li><li><p><strong>叶子结点</strong>：<strong>度为0</strong>的结点。</p></li><li><p>分支结点：除叶子结点以外的结点。</p></li><li><p>结点的层次：<strong>根结点在第一层</strong>。</p></li><li><p>树的深度：所处层次最大的那个结点的层次。</p></li><li><p><strong>树的度</strong>：树中<strong>所有结点的度的最大值</strong>。</p></li><li><p>二叉树每个结点最多只有两棵子树，且有左右之分，不能互换，二叉树有<strong>五种不同的形态</strong>。</p></li><li><p>在二叉树的第 k 层上，最多有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="11.284ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 4987.6 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1855.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2244.1,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3042.9,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(4098.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4598.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 个结点。</p></li><li><p>深度为 m 的二叉树最多有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.621ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2926.3 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1426.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2426.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 个结点。</p></li><li><p><strong>在任意一棵二叉树中，度为 0 的结点（叶子结点）总是比度为 2 的结点多一个。</strong></p></li><li><p>具有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个结点的二叉树，其深度不小于 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.768ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4759.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g><g data-mml-node="mo" transform="translate(3259.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4259.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> ，其中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.872ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3037.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container> 表示为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.546ex" xmlns="http://www.w3.org/2000/svg" width="5.614ex" height="2.116ex" role="img" focusable="false" viewBox="0 -694 2481.2 935.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1881.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的整数部分。</p></li><li><p><strong>满二叉树</strong>：每一层上的结点数都达到最大值，即在满二叉树的第 k 层上有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="1.932ex" role="img" focusable="false" viewBox="0 -853.7 1855.1 853.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> 个结点。</p></li><li><p><strong>完全二叉树</strong>：除最后一层外，每一层上的结点数均达到最大值；在最后一层上只缺少右边的若干结点。</p></li><li><p>具有  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个结点的完全二叉树的深度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.768ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4759.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g><g data-mml-node="mo" transform="translate(3259.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4259.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 。</p></li><li><p>完全二叉树中度为 1 的结点数为 0 或 1 。</p></li><li><p><strong>前序遍历</strong>：<strong>先访问根结点</strong>、然后遍历左子树，最后遍历右子树；并且，在遍历左、右子树时，仍然先访问根结点，然后遍历左子树，最后遍历右子树。</p></li><li><p><strong>中序遍历</strong>：先遍历左子树、<strong>然后访问根结点</strong>，最后遍历右子树；并且，在遍历左、右子树时，仍然先遍历左子树，然后访问根结点，最后遍历右子树。</p></li><li><p><strong>后序遍历</strong>：先遍历左子树、然后遍历右子树，<strong>最后访问根结点</strong>；并且，在遍历左、右子树时，仍然先遍历左子树，然后遍历右子树，最后访问根结点。</p></li><li><p><strong>顺序查找</strong>是从表的一端开始，依次扫描表中的各个元素，并与所要查找的数进行比较。</p></li><li><p>只能采用顺序查找：<br>（1）线性表为无序表，则不管是顺序存储结构还是链式存储结构，只能用顺序查找。</p><p>（2）有序线性表，如果采用链式存储结构，也只能用顺序查找。</p></li><li><p><strong>二分查找</strong>的条件：<br>（1）用<strong>顺序存储结构</strong>，<br>（2）线性表是<strong>有序表</strong>。</p></li><li><p>对于长度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的有序线性表，在最坏情况下，二分法查找只需比较  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.546ex" xmlns="http://www.w3.org/2000/svg" width="5.614ex" height="2.116ex" role="img" focusable="false" viewBox="0 -694 2481.2 935.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1881.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 次，而顺序查找需要比较 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 次。</p></li><li><p><strong>排序算法</strong><br>1、<strong>交换类排序</strong><br>（1）冒泡排序法，在最坏的情况下，冒泡排序需要比较次数为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 。</p><p>（2）<strong>快速排序</strong>法 ，在最坏的情况下，快速排序需要比较次数为  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>。</p><p>2、<strong>插入类排序</strong>：<br>（1）简单插入排序法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 次比较；</p><p>（2）<strong>希尔排序</strong>法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.791ex" xmlns="http://www.w3.org/2000/svg" width="7.765ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 3432.3 1199"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mrow" transform="translate(929.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(633,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(2044.7,0) translate(0 -0.5)"><path data-c="29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></g></g></g></g></svg></mjx-container> 次比较。</p><p>3、<strong>选择类排序</strong>：<br>（1）简单选择排序法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 次比较；</p><p>（2）<strong>堆排序法</strong>，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="11.212ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4955.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mrow" transform="translate(929.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(1155.7,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2870.2,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3036.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3636.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container> 次比较。 相比以上几种(除希尔排序法外)，堆排序法的时间复杂度最小。</p></li></ol><h2 id="二、程序设计基础"><a href="#二、程序设计基础" class="headerlink" title="二、程序设计基础"></a>二、程序设计基础</h2><ol><li>形成良好的程序设计风格需注意：<br>①源程序文档化；<br>②数据说明的方法；<br>③语句的结构；<br>④输入和输出。<br>⑤模块设计要保证低耦合、高内聚。<br>(内聚：每个模块尽可能独立完成自己的功能，不依赖于模块外部的代码。<br>耦合：模块与模块之间接口的复杂程度，模块之间联系越复杂耦合度越高，牵一发而动全身。)</li><li>结构化程序设计方法的四条原则：<br>①自顶向下；<br>②逐步求精；<br>③模块化；<br>④限制使用 goto 语句。</li><li>两类循环语句：先判断后执行的循环体称为<strong>当型循环</strong>结构；先执行循环体后判断的称为<strong>直到型循环</strong>结构。</li><li>面向对象的程序设计以对象为核心，强调对象的<strong>抽象性</strong>，<strong>封装性</strong>，<strong>继承性</strong>、<strong>多态性</strong>、（依赖性）。</li><li>对象的基本特点：<br>（1）标识惟一性；<br>（2）分类性；<br>（3）多态性；<br>（4）封装性；<br>（5）模块独立性好。</li><li><strong>属性</strong>：即对象所包含的信息，它在设计对象时确定，一般只能通过执行对象的操作来改变。<strong>类</strong>：是具有相似属性与操作的一组对象。类是关于对象性质的描述。类是对象的抽象，对象是其对应类的一个实例。</li><li><strong>消息</strong>：是一个实例与另一个实例之间传递的信息。对象间的通信靠消息传递。它请求对象执行某一处理或回答某一要求的信息，它统一了数据流和控制流。消息的<strong>组成</strong>包括：<br>（1）接收消息的对象的名称；<br>（2）消息标识符，也称消息名；<br>（3）零个或多个参数。</li><li><strong>多态性</strong>：是指同样的消息被不同的对象接受时可导致完全不同的行动的现象。</li><li>在<strong>软件设计</strong>过程中，必须遵循软件工程的基本原则：这些原则包括<strong>抽象</strong>、<strong>信息隐蔽</strong>、<strong>模块化</strong>、<strong>局部化</strong>、<strong>确定性</strong>、<strong>一致性</strong>、<strong>完备性</strong>和<strong>可靠性</strong>。</li><li><strong>面向对象</strong>的设计方法与传统的的面向过程的方法有本质不同，它的<strong>基本原理是，使用现实世界的概念抽象地思考问题从而自然地解决问题。</strong>它强调模拟现实世界中的概念而不强调算法，它鼓励开发者在软件开发的绝大部分中都用应用领域的概念去思考。</li><li>字符常量是单引号括起来的一个字符，例如 <code>'a'</code>，也可以通过转义序列表示方法表示一些不可显示字符或无法通过键盘输入的字符，例如<code>\n</code>的含义是换行。</li></ol><h2 id="三、软件工程基础"><a href="#三、软件工程基础" class="headerlink" title="三、软件工程基础"></a>三、软件工程基础</h2><ol><li><p><strong>软件</strong>是包括<strong>程序</strong>、<strong>数据</strong>和<strong>相关文档</strong>的完整集合。分为应用软件和系统软件。</p></li><li><p><strong>软件生命周期</strong>是指软件产品从提出、实现、使用维护到停止使用退役的整个过程。可分为软件定义，软件开发及软件维护3个阶段。</p></li><li><p><strong>软件危机</strong>泛指在计算机软件的开发和维护过程中遇到的一系列严重的问题，集中表现在成本、质量、生产效率等几个方面。</p></li><li><p><strong>软件工程</strong>是指采用工程的概念、原理、技术和方法指导软件的开发与维护。软件工程的主要思想强调在软件开发过程中需要应用工程化原则。软件工程的核心思想是把软件当作一个工程产品来处理。</p></li><li><p><strong>软件工程3要素</strong>：方法，工具和过程。</p></li><li><p><strong>软件工程过程</strong>是把软件转化为输出的一组彼此相关的资源活动，包含4种基本活动：<br>（1）<strong>P</strong>(plan) — 软件规格说明；<br>（2）<strong>D</strong>(do) — 软件开发；<br>（3）<strong>C</strong>(check) — 软件确认；<br>（4）<strong>A</strong>(action) — 软件演进。</p></li><li><p>软件工程的理论和技术性研究的内容主要包括<strong>软件开发技术</strong>和<strong>软件工程管理</strong>。</p></li><li><p><strong>软件工程的原则</strong>：抽象，信息隐蔽，模块化，局部化，确定性，一致性，完备性，可验证性。</p></li><li><p>需求分析阶段的工作：需求获取，需求分析，编写需求规格说明书，需求评审。</p></li><li><p><strong>需求分析方法</strong>：<br>（1）<strong>结构化需求分析</strong>方法：<br>①面向数据结构的Jackson方法（JSD）；<br>②面向数据流的结构化分析方法（SA）；<br>③面向数据结构的结构化数据系统开发方法（DSSD）；<br>（2）<strong>面向对象需求分析</strong>方法（OOA）：<br>①静态分析方法<br>②动态分析 方法。</p></li><li><p>结构化方法包括结构化分析方法，结构化设计方法，结构化编程方法。结构化方法中，<strong>软件功能分解</strong>属于<strong>总体设计</strong>阶段。</p></li><li><p><strong>结构化分析</strong>的<strong>常用工具</strong>： </p><p><strong>（1）数据流图</strong>（<strong>DFD</strong>-Data Flow Diagram）：<br>是结构化分析方法中用于系统逻辑模型的一种工具。它以图形的方式描绘在系统中流动和处理的过程。数据流图中四种基本的符号：<br><strong>①【箭头】</strong>：表示【<strong>数据流】</strong>，数据流是数据在系统中传播的路径。</p><p><strong>②圆或椭圆</strong>：表示加工，加工又称为数据处理，是对数据流进行某些操作或变换。<br><strong>③双横</strong>：表示数据存储（数据源）。数据存储又称为文件，指暂时保存的数据，它可以是数据库文件或任何形式的数据组织。<br><strong>④方框</strong>：数据的源点或终点。它是软件系统外部环境中的实体，统称外部实体。</p><p><strong>（2）数据字典（DD）</strong>：<br>它是结构分析方法的<strong>核心</strong>，是用来描述系统中所用到的全部数据和文件的文档,作用是对DFD中出现的被命名的图形元素进行确切解释。<br>数据字典由以下4类元素组成：<br><strong>①数据流</strong><br><strong>②数据流分量</strong><br><strong>③数据存储</strong><br><strong>④处理</strong></p><p><strong>（3）判定树（决策树）</strong>：<br>是一种<strong>描述加工</strong>的图形工具，适合描述时候处理中具有多个判断，而且每个决策与若干条件有关。</p><p><strong>（4）判定表</strong>：<br>与判定树类似，也是一种<strong>描述加工</strong>的图形工具。如果一个加工逻辑有多个条件、多个操作，并且在不同的条件组合下执行不同的操作，那么可以使用判定表来描述。</p></li><li><p><strong>软件需求规格说明书</strong>（<strong>SRS</strong>，Software Requirement Specification）是需求分析阶段得出的最主要的文档。软件需求规格说明书的特点：正确性、<strong>无歧义性</strong>、完整性、可验证性、一致性、可理解性、可修改性和可追踪性。<br>软件需求规格说明书的<strong>作用</strong>：<br>①<strong>便于用户和开发人员进行理解和交流</strong>。<br>②反映出用户问题的结构，可以作为软件开发工作的基础和依据。<br>③作为确认测试和验收的依据。</p></li><li><p><strong>软件设计</strong>是确定系统的物理模型。软件设计是开发阶段最重要的步骤，是将需求准确地转化为完整的软件产品或系统的唯一途径。<br>从技术观点上看，软件设计包括软件结构设计、数据设计、接口设计、过程设计。<br>从工程管理角度来看，软件设计分两步完成：<br>（1）<strong>概要设计</strong>将软件需求转化为软件体系结构、确定系统级接口、全局数据结构或数据库模式；<br>（2）<strong>详细设计</strong>确立每个模块的实现算法和局部数据结构，用适当方法表示算法和数据结构的细节。</p></li><li><p><strong>软件设计的基本原理</strong> ：<br>模块化、抽象化、信息隐藏和局部化（实现信息隐蔽依靠对象的封装）、模块独立性。</p></li><li><p><strong>耦合性</strong>和<strong>内聚性</strong><br>衡量软件的模块独立性的两个定性的度量标准。<br><strong>耦合性</strong>：是对一个软件结构内不同模块之间互联程度的度量。耦合性的强弱取决于模块间接口的复杂程度。<br><strong>内聚性</strong>：是一个模块内部各个元素间彼此结合的紧密程度的度量。<br>一个模块的内聚性越强则该模块的模块独立性越强。一个模块与其他模块的耦合性越强则该模块的模块独立性越弱。<br>在结构程序设计中，模块划分的<strong>原则</strong>是模块内具有<strong>高内聚</strong>度，模块间具有<strong>低耦合</strong>度。<br>耦合度由低到高：<strong>非直接耦合</strong>，数据耦合，标记耦合，控制耦合，外部耦合，公共耦合，内容耦合。<br>内聚性由强到弱：<strong>功能内聚</strong>，顺序内聚，通信内聚，过程内聚，时间内聚，逻辑内聚，偶然内聚。</p></li><li><p><strong>概要设计</strong>的<strong>工具</strong>：<strong>结构图</strong>（<strong>SC</strong>-Structure Chart）也称<strong>程序结构图。</strong><br>在结构图中：<br><strong>矩形</strong>表示模块；<br>【<strong>箭头</strong>表示<strong>模块间的调用关系】</strong>；<br>带注释的箭头表示模块调用过程中来回传递的信息；<br><strong>实心圆箭头</strong>表示传递<strong>控制</strong>信息;<br>空心<strong>圆箭心</strong>表示传递数据。</p><p>结构图的基本形式：基本形式、顺序形式、重复形式、选择形式。<br>结构图有四种模块类型：传入模块、传出模块、变换模块和协调模块。</p></li><li><p>任何软件系统都可以用数据流图表示，典型的<strong>数据流类型</strong>有两种：<strong>变换型</strong>和<strong>事务型</strong>。</p></li><li><p><strong>设计的准则</strong><br>（1）提高模块独立性。<br>（2）模块规模适中。<br>（3）深度，宽度，扇出和扇入适当。<br>如果深度过大，则说明有的控制模块可能简单了，如果宽度过大，则说明系统的控制过于集中，扇出过大说明模块过分复杂，需要控制和协调过多的下级模块，应适当加中间层次，扇出过小可以把模块进一步分解成若干小模块，或合并到上级模块中，扇入越大则共享该模块的上级数目越多。好的软件设计结构通常<strong>顶层高扇出，中间扇出较少，底层高扇入。</strong><br>（4）使模块的作用域在该模块的控制域内。<br>（5）减少模块的接口和界面的复杂性。<br>（6）设计成单入口，单出口的模块。<br>（7）设计功能可预测的模块。</p></li><li><p><strong>详细设计</strong>常用的设计<strong>工具</strong>（工程设计工具）：图形工具，表格工具和语言工具。<br>图形工具：<br><strong>程序流程图</strong>：【<strong>箭头</strong>表示<strong>控制流】</strong>，方框表示加工步骤，菱形表示逻辑条件。<br><strong>N-S图</strong>（盒图）：有五种基本图形。<br><strong>PAD</strong>图（Problem Analysis Diagram）：问题分析图，有五种基本图型。<br>表格工具：判定表。<br>语言工具：PDL—过程设计语言（结构化的英语和伪码）。</p></li><li><p><strong>软件测试</strong>的目标：<strong>发现</strong>程序中的错误。</p></li><li><p><strong>软件测试方法</strong><br>1、静态测试和动态测试<br>①<strong>静态测试</strong><br>包括代码检查、静态结构分析、代码质量度量。<strong>不实际运行软件</strong>，主要通过人工进行。<br>②<strong>动态测试</strong><br>通过<strong>运行软件</strong>来检验软件中的动态行为和运行结果的正确性。<br>2、白盒测试和黑盒测试<br>①<strong>白盒测试</strong><br>也称为结构测试或逻辑测试，是把程序看成装在一只透明的白盒子里，测试者完全了解程序的结构和处理过程。它根据程序的内部逻辑来设计测试用例，检查程序中的逻辑通路是否都按预定的要求正确地工作。<br>白盒测试的方法：逻辑覆盖，基本路经测试。<br>②<strong>黑盒测试</strong><br>也称功能测试或数据驱动测试，是把程序看成一只黑盒子，测试者完全不了解，或不考虑程序的结构和处理过程。它根据规格说明书的功能来设计测试用例，检查程序的功能是否符合规格说明的要求。<br>黑盒测试的方法：等价划分法，边界值分析法，错误推测法。</p></li><li><p>软件测试过程分4个步骤，即<strong>单元测试—&gt;集成测试</strong>—&gt;<strong>验收测试（确认测试）</strong>—&gt;<strong>系统测试</strong>。<br><strong>确认测试：检查软件产品是否符合需求定义。</strong></p></li><li><p><strong>程序调试</strong>是<strong>诊断（而非发现）</strong>和<strong>改正</strong>程序中的错误。</p></li><li><p>主要的调试方法有：<br>（1）强行排错法； （2）回溯法； （3）原因排除法，包括演绎法，归纳法和二分法。</p></li><li><p><strong>结构化分析（属于需求分析方法）</strong>的常用工具：<br>①数据流图（DFD）<br>②数据字典（DD）<br>③判定树<br>④判定表<br><strong>概要设计（开发阶段）</strong>的常用工具：<br>①系统结构图<br><strong>详细设计（开发阶段）</strong>的常用工具：<br>①程序流程图<br>②N-S图（盒图）<br>③PAD图<br>④HIPO图</p></li></ol><h2 id="四、数据库设计基础"><a href="#四、数据库设计基础" class="headerlink" title="四、数据库设计基础"></a>四、数据库设计基础</h2><ol><li><strong>数据（Data）</strong>是数据库存储的基本对象，是描述事物的符号记录。</li><li><strong>数据库（DB）</strong>是长期储存在计算机内、有组织的、可共享的大量数据的集合。<br>它具有统一的结构形式并存放于统一的存储介质内，是多种应用数据的集成，并可被各个应用程序所共享，所以数据库技术的根本目标是解决数据共享问题。</li><li><strong>数据库管理系统（DBMS）</strong>是数据库的管理机构，负责数据库中的数据组织、数据操纵、数据维护、控制及保护和数据服务等。数据库管理系统是数据库系统的<strong>核心</strong>。<strong>数据库系统</strong>包含<strong>数据库</strong>和<strong>数据库管理系统</strong>。<br>数据库管理系统提供相应的数据语言：<br>数据<strong>定义</strong>语言（D<strong>D</strong>L）：负责数据模式定义和数据物理存取构建。<br>数据<strong>操纵</strong>语言（D<strong>M</strong>L）：负责数据的操纵。<br>数据<strong>控制</strong>语言（D<strong>C</strong>L）：负责数据完整性，安全性的定义与检查以及并发控制，故障恢复等功能。</li><li><strong>数据库系统（DBS）</strong>是指在计算机系统中引入数据库后的系统，一般由数据库、数据库管理系统、应用系统、数据库管理员和用户构成。</li><li>文件系统阶段的缺陷：<br>（1）数据冗余<br>（2）不一致性<br>（3）数据联系弱。</li><li>数据库系统的基本特点：<br>（1）数据的高集成性<br>（2）数据的高共享性和低冗余性<br>（3）数据高独立性<br>（4）数据统一管理与控制。</li><li><strong>数据独立性</strong>是<strong>数据与程序间的互不依赖性</strong>，即数据库中的数据独立于应用程序而不依赖于应用程序。 数据的独立性一般分为物理独立性与逻辑独立性两种。<br>（1）<strong>物理独立性</strong>：<br>当数据的物理结构（包括存储结构、存取方式等）改变时，其逻辑结构，应用程序都不用改变。<br>（2）<strong>逻辑独立性</strong>：<br>数据的逻辑结构改变了，如修改数据模式、增加新的数据类型、改变数据间联系等，用户的应用程序可以不变。</li><li>数据库系统的三级模式<br>（1）<strong>外模式</strong>，外模式也称子模式，它是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，一个概念模式可以有若干个外模式。<br>（2）<strong>概念模式</strong>，也称逻辑模式，是对数据库系统中全局数据逻辑结构的描述，是全体用户公共数据视图。一个数据库只有一个概念模式。<br>（3）<strong>内模式</strong>，内模式又称物理模式，它给出了数据库物理存储结构与物理存取方法。一个数据库只有一个内模式。<br>内模式处于最底层，它反映了数据在计算机物理结构中的实际存储形式，概念模式处于中间层，它反映了设计者的数据全局逻辑要求，而外模式处于最外层，它反映了用户对数据的要求。</li><li>两级映射保证了数据库系统中数据的独立性。</li><li>E-R模型<br>（1）<strong>实体</strong>的表示：用<strong>矩形</strong>表示实体集，在矩形内写上该实体集的名字。<br>（2）<strong>属性</strong>的表示：用<strong>椭圆</strong>形表示属性，在椭圆形内写上该属性的名称。<br>（3）<strong>联系</strong>的表示：用<strong>菱形</strong>表示联系，菱形内写上联系名。</li><li>关系模式采用二维表来表示，(数据模式）由关系<strong>数据结构</strong>，关系<strong>操纵</strong>和关系<strong>完整性约束</strong>3部分组成，在关系数据库中，用来表示实体间联系的是关系。</li><li>在二维表中惟一标识元组的最小属性值称为该表的键或<strong>码</strong>。</li><li>三类数据约束，它们是<strong>实体完整性约束</strong>、<strong>参照完整性约束</strong>以及<strong>用户定义的完整性约束</strong>。其中实体完整性约束、参照完整性约束必须满足的完整性约束条件。参照完整性约束不允许关系应用不存在的元组。实体完整性约束要求关系的主键中属性值不能为空，这是数据库完整性的最基本要求。</li><li>投影：一元运算，对一个关系进行垂直切割，消去某些列。</li><li>除：给定关系R（X，Y）和S（Y，Z），其中X，Y，Z是属性组，R中的Y和S中Y可以有不同的属性名，但必须出自相同的域集。</li><li>自然连接满足的条件是<br>（1）两关系间有公共域<br>（2）通过公共域的相等值进行连接。</li><li><strong>数据库设计</strong><br>①<strong>面向数据</strong>的方法是以信息需求为主，兼顾处理需求；<br>②<strong>面向过程</strong>的方法是以处理需求为主，兼顾信息需求。<br>由于数据在系统中稳定性高，数据已成为系统的核心，故面向数据的设计方法已成为主流。</li><li>数据库设计生命周期：需求分析阶段、概念设计阶段、逻辑设计阶段、物理设计阶段。</li><li>规范化：一个低一级范式的关系模式，通过模式分解转化为若干个高一级范式的关系模式的集合。</li><li><strong>概念结构设计</strong>是将需求分析阶段得到的用户需求抽象为信息结构即概念模型的过程，它是整个数据库设计的<strong>关键</strong>。</li><li>逻辑结构设计的任务是将E—R图转换成关系数据模型的过程。</li><li>常用的存取方法：索引方法，聚簇方法和HASH方法。</li><li>数据库概念设计的过程中，视图设计一般有三种设计次序：<br>①<strong>自顶向下</strong>。这种方法是先从抽象级别高且普遍性强的对象开始逐步细化、具体化与特殊化。<br>②<strong>由底向上</strong>。这种设计方法是先从具体的对象开始，逐步抽象，普遍化与一般化，最后形成一个完整的视图设计。<br>③<strong>由内向外</strong>。这种设计方法是先从最基本与最明显的对象着手逐步扩充至非基本、不明显的其它对象。</li><li><strong>分布式数据库系统</strong>具有<strong>数据分布性</strong>、<strong>逻辑整体性</strong>、<strong>位置透明性</strong>和<strong>复制透明性</strong>的特点。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自&lt;a class=&quot;link&quot; href=&quot;https://zhuanlan.zhihu.com/p/100698395&quot;&gt;知乎&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Docker运行京东签到脚本</title>
    <link href="https://me.sunshj.top/archives/jdscript-docker/"/>
    <id>https://me.sunshj.top/archives/jdscript-docker/</id>
    <published>2022-03-10T03:15:53.176Z</published>
    <updated>2022-03-10T03:34:28.387Z</updated>
    
    <content type="html"><![CDATA[<p>此篇使用docker-compose运行京东签到脚本，使用的是Oracle VPS</p><span id="more"></span><h1 id="Docker运行京东签到脚本"><a href="#Docker运行京东签到脚本" class="headerlink" title="Docker运行京东签到脚本"></a>Docker运行京东签到脚本</h1><p>甲骨文云VPS需要进行以下步骤：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载旧版本</span></span><br><span class="line">yum remove docker docker-common docker-selinux docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><h3 id="1、更新"><a href="#1、更新" class="headerlink" title="1、更新"></a>1、更新</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><h3 id="2、安装依赖"><a href="#2、安装依赖" class="headerlink" title="2、安装依赖"></a>2、安装依赖</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum -y install git-core</span><br></pre></td></tr></table></figure><h3 id="3、安装docker"><a href="#3、安装docker" class="headerlink" title="3、安装docker"></a>3、安装docker</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo yum check-update</span><br><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><h3 id="4、安装docker-compose"><a href="#4、安装docker-compose" class="headerlink" title="4、安装docker-compose"></a>4、安装docker-compose</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="5、下载脚本"><a href="#5、下载脚本" class="headerlink" title="5、下载脚本"></a>5、下载脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chinnkarahoi/jd-scripts-docker</span><br></pre></td></tr></table></figure><hr><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><h3 id="1、获取京东cookie"><a href="#1、获取京东cookie" class="headerlink" title="1、获取京东cookie"></a>1、获取京东cookie</h3><p>访问 <a class="link"   href="https://plogin.m.jd.com/login/login" >https://plogin.m.jd.com/login/login<i class="fas fa-external-link-alt"></i></a> 手机号登录获取cookie中的 <code>pt_key</code>, <code>pt_pin</code>填入项目目录下的 <code>./env/env1</code>文件,<br>(此方式cookie有效时长大概31天，其他登录方式比较短)。</p><p><code>pt_key</code>&amp;<code>pt_pin</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">pt_key=AAJh4lNdADDJPziNPP****************************************aiKSO8</span><br><span class="line">pt_pin=jd_4f*********</span><br><span class="line">JD_COOKIE=<span class="string">&quot;pt_key=<span class="variable">$pt_key</span>;pt_pin=<span class="variable">$pt_pin</span>;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2、TG-BOT推送"><a href="#2、TG-BOT推送" class="headerlink" title="2、TG-BOT推送"></a>2、TG-BOT推送</h3><p>需要能访问TG的机器</p><p>需要你的用户ID（不是用户名）和BOT-TOKEN（向@botfather申请）</p><p>申请后需要和BOT对话一次才能正确接收消息</p><p><code>tg_bot-api</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">194630****:AAFUrnerzivOm*****************</span><br><span class="line"></span><br><span class="line">82******6</span><br></pre></td></tr></table></figure><hr><h2 id="三、运行"><a href="#三、运行" class="headerlink" title="三、运行"></a>三、运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up --build --force-recreate --detach jd1</span><br></pre></td></tr></table></figure><p> 手动运行所有脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> jd1 bash -c <span class="string">&#x27;set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; ls jd_*.js | xargs -i node &#123;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>查看log</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose logs</span><br></pre></td></tr></table></figure><ul><li>停止</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><p>其他额外操作请参考Github介绍</p><p>出现bug，<code>UnhandledPromiseRejectionWarning: Error: Cannot find module &#39;got&#39;</code>之类错误，重新运行。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇使用docker-compose运行京东签到脚本，使用的是Oracle VPS&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Linux" scheme="https://me.sunshj.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>批量替换 Front Matter中的tags</title>
    <link href="https://me.sunshj.top/archives/hexo-tags-replace/"/>
    <id>https://me.sunshj.top/archives/hexo-tags-replace/</id>
    <published>2022-03-09T04:51:03.584Z</published>
    <updated>2022-03-09T04:55:23.383Z</updated>
    
    <content type="html"><![CDATA[<p>在Markdown文档中可以通过Front Matter中的tags来设置hexo文章中的标签属性，但当想把一个标签改名，要批量替换为另一种标签时却很麻烦。<span id="more"></span>所以可以使用下面的方法来批量替换tags。</p><h1 id="批量替换-Front-Matter中的tags标签值"><a href="#批量替换-Front-Matter中的tags标签值" class="headerlink" title="批量替换 Front Matter中的tags标签值"></a>批量替换 Front Matter中的tags标签值</h1><blockquote><p>使用python实现</p></blockquote><p>需要下载<code>python-frontmatter</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-frontmatter</span><br></pre></td></tr></table></figure><p>实现脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> frontmatter</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_front_matter</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        post = frontmatter.loads(f.read())</span><br><span class="line">    is_write = <span class="literal">False</span></span><br><span class="line">    tags = post.get(<span class="string">&quot;tags&quot;</span>, [])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;FrontMatter中的tags: &#x27;</span>, tags)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将&#x27;教程&#x27;替换为&#x27;tutorial&#x27;，&#x27;总结&#x27;替换为&#x27;Summarize&#x27;。。。</span></span><br><span class="line">    new_tags = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x.replace(<span class="string">&#x27;教程&#x27;</span>, <span class="string">&#x27;tutorial&#x27;</span>).replace(<span class="string">&#x27;总结&#x27;</span>, <span class="string">&#x27;summary&#x27;</span>).replace(</span><br><span class="line">        <span class="string">&#x27;分享&#x27;</span>, <span class="string">&#x27;share&#x27;</span>).replace(<span class="string">&#x27;网站建设&#x27;</span>, <span class="string">&#x27;Web-building&#x27;</span>).replace(<span class="string">&#x27;大数据&#x27;</span>, <span class="string">&#x27;bigdata&#x27;</span>), tags))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;替换之后的tags&#x27;</span><span class="string">&#x27;: &#x27;</span>, new_tags)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> post.get(<span class="string">&quot;tags&quot;</span>, <span class="literal">None</span>) != new_tags:</span><br><span class="line">        post[<span class="string">&quot;tags&quot;</span>] = new_tags</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> is_write:</span><br><span class="line">            is_write = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> is_write:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(frontmatter.dumps(post))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归获取目录下所有文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_all_files</span>(<span class="params">root_path, ignore_dirs=[]</span>):</span><br><span class="line">    files = []</span><br><span class="line">    default_dirs = [<span class="string">&quot;.git&quot;</span>, <span class="string">&quot;.config&quot;</span>]</span><br><span class="line">    ignore_dirs.extend(default_dirs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> parent, dirs, filenames <span class="keyword">in</span> os.walk(root_path):</span><br><span class="line">        dirs[:] = [d <span class="keyword">for</span> d <span class="keyword">in</span> dirs <span class="keyword">if</span> <span class="keyword">not</span> d <span class="keyword">in</span> ignore_dirs]</span><br><span class="line">        filenames = [f <span class="keyword">for</span> f <span class="keyword">in</span> filenames <span class="keyword">if</span> <span class="keyword">not</span> f[<span class="number">0</span>] == <span class="string">&#x27;.&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> filenames:</span><br><span class="line">            <span class="keyword">if</span> file.endswith(<span class="string">&quot;.md&quot;</span>):</span><br><span class="line">                files.append(os.path.join(parent, file))</span><br><span class="line">    <span class="keyword">return</span> files</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    files = list_all_files(<span class="string">&#x27;md/&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当前目录: &quot;</span>, os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;---------------------------------------------------------------&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前文件: &#x27;</span>, file)</span><br><span class="line">        update_front_matter(file)</span><br></pre></td></tr></table></figure><p>使用方法：</p><ul><li><code> files = list_all_files(&#39;md/&#39;)</code>指定目录</li><li><code>new_tags</code>里设置需要更换的规则</li></ul><p><strong>注意：</strong></p><blockquote><p>文章的tag必须是<code>- XX</code>格式的才可进行转换</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;在Markdown文档中可以通过Front Matter中的tags来设置hexo文章中的标签属性，但当想把一个标签改名，要批量替换为另一种标签时却很麻烦。</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
    <category term="Python" scheme="https://me.sunshj.top/tags/Python/"/>
    
    <category term="网站建设" scheme="https://me.sunshj.top/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>CSS的层叠权重值</title>
    <link href="https://me.sunshj.top/archives/css-specificity/"/>
    <id>https://me.sunshj.top/archives/css-specificity/</id>
    <published>2022-03-07T15:58:35.802Z</published>
    <updated>2022-03-08T16:13:15.092Z</updated>
    
    <content type="html"><![CDATA[<p>在学习CSS的过程中可能听说过特指度（I-C-E）这个东西，简单来说特指度表示一个CSS选择器表达式的重要程度，通常称为I-C-E计算公式。<span id="more"></span>其中的 <code>I</code> 对应着 <code>Id</code>，<code>C</code> 对应着 <code>class</code>，<code>E</code> 对应着 <code>Element</code>，在针对一个 <code>CSS</code> 选择器表达式的时候，遇到一个 <code>Id</code> 就往特指度数值中加 <code>100</code>，遇到一个 <code>class</code> 就往特指度数值中加 <code>10</code>，遇到一个 <code>Element</code> 就往特指度数值中加 <code>1</code>。</p><h1 id="CSS的层叠权重值"><a href="#CSS的层叠权重值" class="headerlink" title="CSS的层叠权重值"></a>CSS的层叠权重值</h1><blockquote><p>本文转载自<a class="link"   href="https://heptaluan.github.io/2019/04/16/CSS/18/" >样式的层叠权重值 - heptaluan’s blog<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、CSS-权重"><a href="#一、CSS-权重" class="headerlink" title="一、CSS 权重"></a>一、CSS 权重</h2><p><code>CSS</code> 权重，我们可以简单理解为 <code>CSS</code> 优先级，我们通过一个小例子来加深理解。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span>&gt;</span>我是一段简单的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#text</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行后可以发现，<code>p</code> 标签文本的颜色为蓝色，那么为什么会是蓝色呢？这就是 <code>CSS</code> 权重来决定的，它决定最终用哪个样式作用到 <code>p</code> 标签上，在网上流传的说法当中，关于选择器各级别的优先级，大家应该已经很清楚了，常见的说法是下面这样的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!important &gt; 内联 &gt; ID &gt; 类 &gt; 标签/伪类/属性选择 &gt; 伪对象 &gt; 通配符 &gt; 继承</span><br></pre></td></tr></table></figure><p>那么这个顺序是怎么得出来的呢？</p><p>实际上在 <a class="link"   href="https://www.w3.org/TR/CSS2/" >CSS 2.1<i class="fas fa-external-link-alt"></i></a> 规范当中关于 <a class="link"   href="https://www.w3.org/TR/CSS2/cascade.html#specificity" >具体性（specificity）<i class="fas fa-external-link-alt"></i></a> 的定义当中，描述是非常明确的，根据 <code>CSS</code> 规范，具体性越明确的样式规则，权重值越高，而计算权重值的依据，并不像是我们在开头部分所描述的 <code>class</code> 是 <code>10</code>，标签是 <code>1</code>，<code>Id</code> 是 <code>100</code> 之类的，虽然这样在大多数情况下能够得到正确的结果。</p><h2 id="二、选择器权重值的计算"><a href="#二、选择器权重值的计算" class="headerlink" title="二、选择器权重值的计算"></a>二、选择器权重值的计算</h2><p>下面我们就根据 <code>CSS</code> 规范，来具体的看一下选择器权重值到底是如何进行计算的，主要有以下四点：</p><ul><li><code>A</code>，如果规则是写在标签的 <code>style</code> 属性中（内联样式），则 <code>A = 1</code>，否则 <code>A = 0</code>，对于内联样式，由于没有选择器，所以 <code>B</code>、<code>C</code>、<code>D</code> 的值都为 <code>0</code>，即 <code>A = 1</code>，<code>B = 0</code>，<code>C = 0</code>，<code>D = 0</code>（简写为 <code>1, 0, 0, 0</code>）</li><li><code>B</code>，计算该选择器中 <code>Id</code> 的数量（例如 <code>#header</code> 这样的选择器计算为 <code>0, 1, 0, 0</code>）</li><li><code>C</code>，计算该选择器中伪类及其它属性的数量，包括类选择器、属性选择器等，不包括伪元素（例如 <code>.logo[id=&#39;site-logo&#39;]</code> 这样的选择器，计算为 <code>0, 0, 2, 0</code>）</li><li><code>D</code>，计算该选择器中伪元素及标签的数量（例如 <code>p:first-letter</code> 这样的选择器，计算为 <code>0, 0, 0, 2</code>）</li></ul><p>我们可以根据上面的规则来对应看看下面这些示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* &#123;&#125;              <span class="comment">/* a = 0 b = 0 c = 0 d = 0 ==&gt; specificity = 0, 0, 0, 0 */</span></span><br><span class="line"><span class="selector-tag">li</span> &#123;&#125;             <span class="comment">/* a = 0 b = 0 c = 0 d = 1 ==&gt; specificity = 0, 0, 0, 1 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-line &#123;&#125;  <span class="comment">/* a = 0 b = 0 c = 0 d = 2 ==&gt; specificity = 0, 0, 0, 2 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;&#125;          <span class="comment">/* a = 0 b = 0 c = 0 d = 2 ==&gt; specificity = 0, 0, 0, 2 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ol</span>+<span class="selector-tag">li</span> &#123;&#125;       <span class="comment">/* a = 0 b = 0 c = 0 d = 3 ==&gt; specificity = 0, 0, 0, 3 */</span></span><br><span class="line"><span class="selector-tag">h1</span>+*<span class="selector-attr">[rel=up]</span> &#123;&#125;   <span class="comment">/* a = 0 b = 0 c = 1 d = 1 ==&gt; specificity = 0, 0, 1, 1 */</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.red</span> &#123;&#125;   <span class="comment">/* a = 0 b = 0 c = 1 d = 3 ==&gt; specificity = 0, 0, 1, 3 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.red</span><span class="selector-class">.level</span> &#123;&#125;   <span class="comment">/* a = 0 b = 0 c = 2 d = 1 ==&gt; specificity = 0, 0, 2, 1 */</span></span><br><span class="line"><span class="selector-id">#name</span> &#123;&#125;          <span class="comment">/* a = 0 b = 1 c = 0 d = 0 ==&gt; specificity = 0, 1, 0, 0 */</span></span><br><span class="line">style=&#x27;&#x27;          <span class="comment">/* a = 1 b = 0 c = 0 d = 0 ==&gt; specificity = 1, 0, 0, 0 */</span></span><br></pre></td></tr></table></figure><p>根据这样的定义，在网上有很多文章简单地把规则归纳为：</p><blockquote><p>针对内联样式的权重值是 <code>1000</code>，<code>Id</code> 选择器的权重值是 <code>100</code>，<code>Class</code> 选择器的权重值是 <code>10</code>，标签选择器的权重值是 <code>1</code>，整条规则中的所有选择器权重值相加得到整个样式规则的权重值，数字越大权重值越高</p></blockquote><p>大多数情况下，按照这样的理解得出的结论没有问题，但是遇到下面这样的情况就出现问题了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式一 */</span></span><br><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">header</span> <span class="selector-tag">div</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">div</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> <span class="selector-tag">em</span> &#123; <span class="attribute">color</span>: red &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 样式二 */</span></span><br><span class="line"><span class="selector-class">.count</span> &#123; <span class="attribute">color</span>: blue &#125;</span><br></pre></td></tr></table></figure><p>如果按照错误的计算方法来进行计算的话，样式一的权重值是 <code>11</code>，样式二的权重值是 <code>10</code>，所以如果这两条规则用于同一个元素，则该元素应该是红色，但是实际的结果却是蓝色的，所以我们按照规范当中提到的方式再次来看看上面的示例，针对例子中的样式一权重值应该是 <code>0, 0, 0, 11</code>，而样式二的权重值是 <code>0, 0, 1, 0</code>，根据规范：</p><blockquote><p>计算权重值时 <code>A, B, C, D</code> 四组值，从左到右，分组比较，如果 <code>A</code> 相同，比较 <code>B</code>, 如果 <code>B</code> 相同，比较 <code>C</code>，如果 <code>C</code> 相同，比较 <code>D</code>，如果 <code>D</code> 相同，则后定义的优先</p></blockquote><p>我们可以得出，样式二和样式一的 <code>A、B</code> 相同，而样式二的 <code>C</code> 大于样式一，所以不管 <code>D</code> 的值如何，样式二权重值都大于样式一，这就是正确的答案。</p><h2 id="三、特殊的-important"><a href="#三、特殊的-important" class="headerlink" title="三、特殊的 !important"></a>三、特殊的 !important</h2><p>在按照 <code>ABCD</code> 四组计算比较之外，在定义样式的时候，还可以对某一个属性应用 <code>!important</code>，<code>CSS</code> 规范中规定。</p><blockquote><p><code>!important</code> 用于单独指定某条样式中的单个属性，对于被指定的属性，有 <code>!important</code> 指定的权重值大于所有未用 <code>!important</code> 指定的规则</p></blockquote><p>例如下面这个示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式一 */</span></span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 样式二 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就整条规则而言，样式一的权重值为 <code>0, 1, 1, 3</code>，而样式二的权重值仅为 <code>0, 0, 0, 2</code>，所以应用于相同元素时，应该样式一生效，但是对于 <code>color</code> 这个属性，由于在样式二中用 <code>!important</code> 做了指定，因此 <code>color</code> 将应用样式二的规则，而 <code>font-weight</code> 则按照规定用样式一的规则。</p><p>因此 <code>!important</code> 的作用只有在具有唯一性时才能提现，但是我们永远无法预料自己什么时候又需要覆盖一个已经指定了 <code>!important</code> 的属性，所以最好的办法就是不要使用 <code>!important</code>。</p><blockquote><p>这里有一个需要注意的地方，如果多条规则中都对同一个属性指定了 <code>!important</code> 呢？这时候 <code>!important</code> 的作用相互抵销，依然按照 <code>ABCD</code> 四组计算比较，更多详细内容可以参考 <code>MDN</code> 上的 <a class="link"   href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Specificity#%E4%BE%8B%E5%A4%96%E7%9A%84_!important_%E8%A7%84%E5%88%99" >例外的 !important 规则<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>下面是一些来自 <code>MDN</code> 上的一些经验法则</p><ul><li>一定要优先考虑使用样式规则的优先级来解决问题而不是 <code>!important</code></li><li>只有在需要覆盖全站或外部 <code>CSS</code> 的特定页面中使用 <code>!important</code>（比如引入了某些框架）</li><li>永远不要在全站范围的 <code>CSS</code> 上使用 <code>!important</code></li><li>永远不要在你的插件中使用 <code>!important</code></li></ul><p>取而代之，你可以</p><ul><li>更好的利用 <code>CSS</code> 级联属性</li><li>使用更具体的规则，在您选择的元素之前增加一个或多个元素，使选择器变得更加具体，并获得更高的优先级</li></ul><p>比如下面这个例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Text<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span><span class="selector-id">#test</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面例子中，无论你 <code>CSS</code> 语句的顺序是什么样的，文本都会是绿色的，因为这一条规则是最具有针对性，优先级最高的（同理，无论语句顺序怎么样，蓝色的规则都会覆盖红色的规则），我们在之前提到了 <code>!important</code> 的相关规则和使用方式，但是在某些情况下，使用 <code>!important</code> 可能是无可避免的，那么我们该如何来覆盖 <code>!important</code> 呢，主要有下面三种方式：</p><ul><li>再添加一条带 <code>!important</code> 的 <code>CSS</code> 规则，其实就是要么给这个选择器更高的优先级（添加一个标签，<code>Id</code> 或 <code>Class</code>），或是添加一样的选择器，把它的位置放在原有声明的后面</li><li>使用相同的选择器，但是置于已有的样式之后</li><li>或者改写原来的规则，以避免使用 <code>!important</code></li></ul><h2 id="四、关于-inherit"><a href="#四、关于-inherit" class="headerlink" title="四、关于 inherit"></a>四、关于 inherit</h2><p>除了直接指定到元素上的样式规则以外，每个属性值还有一个可能为 <code>inherit</code> 的值，表示元素的该样式属性继承自父级元素，与父级元素的定义一致，比如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>某些文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上例当中，我们将 <code>li</code> 的 <code>color</code> 样式设定为红色，并未针对 <code>span</code> 标签指定 <code>color</code> 属性，但是 <code>span</code> 中的文字会显示为红色，这就是因为 <code>span</code> 的 <code>color</code> 属性默认值为 <code>inherit</code>，对于 <code>inherit</code> 的属性，只要记住一点，即继承而来的属性值，权重永远低于明确指定到元素的定义，只有当一个元素的某个属性没有被直接指定时，才会继承父级元素的值，我们稍微调整一下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.list</span> <span class="selector-class">.item</span> &#123; <span class="attribute">color</span>: red &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span> &#123; <span class="attribute">color</span>: blue &#125;</span><br></pre></td></tr></table></figure><p>同样的例子，第一条规则按照 <code>ABCD</code> 四组计算的权重为 <code>0, 0, 2, 0</code>，第二条规则的权重为 <code>0, 0, 0, 1</code>，虽然第一条规则的权重更高，但是它是针对 <code>li</code> 元素的直接指定，并不是针对 <code>span</code> 元素定义的，所以计算 <code>span</code> 的 <code>color</code> 属性权重值时，实际上就是 <code>inherit</code> 的红色与直接指定的蓝色的对比，按照规则，只要有直接指定的值（蓝色），就不会再取继承的值（红色），所以 <code>span</code> 中的文字显示为蓝色。</p><p>这条规则最典型的场景就是链接文字的颜色，由于一般浏览器自带的样式表都有针对 <code>a</code> 标签的颜色及下划线的直接指定，所以网页样式表中对 <code>a</code> 标签的父级元素指定 <code>color</code> 属性及 <code>text-decoration</code> 属性，通常不会起作用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>父级元素设置的 color 和 text-decoration 对我不起作用<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.txt</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们在浏览器可以看到，尽管我们给 <code>a</code> 标签的父级 <code>p</code> 设置了颜色红色和去除下划线，但是 <code>a</code> 标签依然是蓝色的和带下划线的，即使你给它们都加上 <code>!important</code> 也无效，但是我们可以通过下面的 <code>reset</code> 来改变这一点：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: inherit;</span><br><span class="line">  <span class="attribute">text-decoration</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.txt</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，父级设置的样式生效了，由于我们的样式表对 <code>a</code> 标签直接指定了 <code>color</code> 和 <code>text-decoration</code> 属性值，覆盖了浏览器的默认样式，所以在没有特别指定 <code>a</code> 标签的颜色和下划线定义的前提下，会从父级元素 <code>p</code> 继承，因此链接会显示红色和没有下划线。</p><blockquote><p>特别补充，<code>inherit</code> 在 <code>CSS1</code> 规范中并未定义，所以 <code>IE6/IE7/IE8</code> 的 <code>QuirksMode</code> 不支持</p></blockquote><p>关于 <code>a</code> 标签，我们再来看下面这个有趣的例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>鼠标划入时，我的颜色是？<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们希望的效果是鼠标移入 <code>a</code> 标签的时候，文字变成红色的，但是实际仍然是蓝色，那么为什么会这样呢？其实，<code>a</code> 标签的四个伪类（<code>:link</code>、<code>:hover</code>、<code>active</code>、<code>visited</code>）的优先级是一样的，所以这时候就看它们在样式文件中的顺序了，后面的会覆盖前面的，为了避免出现这样的情况，我们在写 <code>a</code> 标签的伪类的时候，要注意它们的顺序，遵循 <code>:link</code>、<code>:visited</code>、<code>:hover</code>、<code>:active</code>。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>最后我们再来看一个实例，加深一下印象，如下，请问两个 <code>p</code> 标签的文本颜色分别是什么？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;blue red&quot;</span>&gt;</span>我的颜色是？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red blue&quot;</span>&gt;</span>我的颜色是？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可能觉得一个颜色为红，一个为蓝，但是运行后可以发现，它们都是蓝色的，所以这里就需要注意了，<code>class</code> 中的类名的顺序并不会影响样式的优先级，而是由它们在样式文件中的先后顺序决定的，后面定义的优先级更高。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>权重决定了你的 <code>CSS</code> 规则怎么样被浏览器解析直到生效</li><li>权重决定了哪一条规则会被浏览器应用到元素上</li><li>每个选择器都有自己的权重</li><li>权重的大小跟选择器的类型和数量有关</li><li>样式的优先级跟样式的定义顺序有关，后面的覆盖前面的</li><li>一条样式规则的整体权重值包含四个独立的部分 <code>[A, B, C, D]</code></li><li><code>A</code> 表示内联样式，只有 <code>1</code> 或 <code>0</code> 两个值</li><li><code>B</code> 表示选择器中 <code>Id</code> 的数量</li><li><code>C</code> 表示选择器中类、属性、伪类选择器的数量</li><li><code>D</code> 表示选择器中伪元素及标签的数量</li><li>比较时，从低位到高位（从 <code>A</code> 到 <code>D</code>）分别比较，高位相同时才比较低位</li><li>如果两个选择器作用到同一元素上，则权重高者生效</li><li>如果两个选择器权重相同，则最后定义的规则被计算到权重中（后面定义的 <code>CSS</code> 规则权重要更大，会覆盖前面的 <code>CSS</code> 规则）</li><li>标签选择器的权重永远都比一个类选择器的权重低，无论有多少个，除非使用 <code>!important</code></li><li>有 <code>!important</code> 标记指定的属性权重值最高，多次指定时相互抵消，应尽量减少 <code>!important</code> 的使用</li><li><code>inherit</code> 而来的属性定义，优先级低于任何直接指定的属性值</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在学习CSS的过程中可能听说过特指度（I-C-E）这个东西，简单来说特指度表示一个CSS选择器表达式的重要程度，通常称为I-C-E计算公式。</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>js落叶动态效果</title>
    <link href="https://me.sunshj.top/archives/js-leaf-effect/"/>
    <id>https://me.sunshj.top/archives/js-leaf-effect/</id>
    <published>2022-03-07T04:27:18.471Z</published>
    <updated>2022-03-08T16:13:56.911Z</updated>
    
    <content type="html"><![CDATA[<p>更换漂浮物样式，换掉千篇一律的樱花🌸动效</p><span id="more"></span><h1 id="js落叶特效"><a href="#js落叶特效" class="headerlink" title="js落叶特效"></a>js落叶特效</h1><blockquote><p>本文转载自<a class="link"   href="https://kainote.top/2022/01/08/hexo%E9%A3%98%E9%9B%AA%E9%A3%98%E8%90%BD%E5%8F%B6%E7%89%B9%E6%95%88/" >hexo飘雪飘落叶特效 | KAI’S NOTE<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、代码"><a href="#一、代码" class="headerlink" title="一、代码"></a>一、代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stop, staticx;</span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">img.<span class="property">src</span> = <span class="string">&quot;https://cdn.jsdelivr.net/gh/kaix2301/pictures/img202201081103397.png&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Sakura</span>(<span class="params">x, y, s, r, fn</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">s</span> = s;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">r</span> = r;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fn</span> = fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Sakura</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params">cxt</span>) &#123;</span><br><span class="line">    cxt.<span class="title function_">save</span>();</span><br><span class="line">    <span class="keyword">var</span> xc = <span class="number">40</span> * <span class="variable language_">this</span>.<span class="property">s</span> / <span class="number">4</span>;</span><br><span class="line">    cxt.<span class="title function_">translate</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>);</span><br><span class="line">    cxt.<span class="title function_">rotate</span>(<span class="variable language_">this</span>.<span class="property">r</span>);</span><br><span class="line">    cxt.<span class="title function_">drawImage</span>(img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">40</span> * <span class="variable language_">this</span>.<span class="property">s</span>, <span class="number">40</span> * <span class="variable language_">this</span>.<span class="property">s</span>)</span><br><span class="line">    cxt.<span class="title function_">restore</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Sakura</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = <span class="variable language_">this</span>.<span class="property">fn</span>.<span class="title function_">x</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = <span class="variable language_">this</span>.<span class="property">fn</span>.<span class="title function_">y</span>(<span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">y</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">r</span> = <span class="variable language_">this</span>.<span class="property">fn</span>.<span class="title function_">r</span>(<span class="variable language_">this</span>.<span class="property">r</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">x</span> &gt; <span class="variable language_">window</span>.<span class="property">innerWidth</span> || <span class="variable language_">this</span>.<span class="property">x</span> &lt; <span class="number">0</span> || <span class="variable language_">this</span>.<span class="property">y</span> &gt; <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">this</span>.<span class="property">y</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">r</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;fnr&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">random</span>() &gt; <span class="number">0.4</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">x</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">s</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">r</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">x</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">s</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">r</span> = <span class="title function_">getRandom</span>(<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">list</span> = [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span> (<span class="params">sakura</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(sakura);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">list</span>[i].<span class="title function_">update</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params">cxt</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">list</span>[i].<span class="title function_">draw</span>(cxt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">list</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">size</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">option</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> ret, random;</span><br><span class="line">    <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">            ret = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            ret = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            ret = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;r&#x27;</span>:</span><br><span class="line">            ret = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;fnx&#x27;</span>:</span><br><span class="line">            random = -<span class="number">0.5</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1</span>;</span><br><span class="line">            ret = <span class="keyword">function</span> (<span class="params">x, y</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> x + <span class="number">0.5</span> * random - <span class="number">1.7</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;fny&#x27;</span>:</span><br><span class="line">            random = <span class="number">1.5</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.7</span></span><br><span class="line">            ret = <span class="keyword">function</span> (<span class="params">x, y</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> y + random;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;fnr&#x27;</span>:</span><br><span class="line">            random = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.03</span>;</span><br><span class="line">            ret = <span class="keyword">function</span> (<span class="params">r</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> r + random;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startSakura</span>(<span class="params"></span>) &#123;</span><br><span class="line">    requestAnimationFrame = <span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">mozRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">msRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">oRequestAnimationFrame</span>;</span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>),</span><br><span class="line">        cxt;</span><br><span class="line">    staticx = <span class="literal">true</span>;</span><br><span class="line">    canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">    canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">    canvas.<span class="title function_">setAttribute</span>(<span class="string">&#x27;style&#x27;</span>, <span class="string">&#x27;position: fixed;left: 0;top: 0;pointer-events: none;&#x27;</span>);</span><br><span class="line">    canvas.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;canvas_sakura&#x27;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(canvas);</span><br><span class="line">    cxt = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> sakuraList = <span class="keyword">new</span> <span class="title class_">SakuraList</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;</span><br><span class="line">        randomX = <span class="title function_">getRandom</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">        randomY = <span class="title function_">getRandom</span>(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">        randomR = <span class="title function_">getRandom</span>(<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        randomS = <span class="title function_">getRandom</span>(<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">        randomFnx = <span class="title function_">getRandom</span>(<span class="string">&#x27;fnx&#x27;</span>);</span><br><span class="line">        randomFny = <span class="title function_">getRandom</span>(<span class="string">&#x27;fny&#x27;</span>);</span><br><span class="line">        randomFnR = <span class="title function_">getRandom</span>(<span class="string">&#x27;fnr&#x27;</span>);</span><br><span class="line">        sakura = <span class="keyword">new</span> <span class="title class_">Sakura</span>(randomX, randomY, randomS, randomR, &#123;</span><br><span class="line">            <span class="attr">x</span>: randomFnx,</span><br><span class="line">            <span class="attr">y</span>: randomFny,</span><br><span class="line">            <span class="attr">r</span>: randomFnR</span><br><span class="line">        &#125;);</span><br><span class="line">        sakura.<span class="title function_">draw</span>(cxt);</span><br><span class="line">        sakuraList.<span class="title function_">push</span>(sakura);</span><br><span class="line">    &#125;</span><br><span class="line">    stop = <span class="title function_">requestAnimationFrame</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        cxt.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">        sakuraList.<span class="title function_">update</span>();</span><br><span class="line">        sakuraList.<span class="title function_">draw</span>(cxt);</span><br><span class="line">        stop = <span class="title function_">requestAnimationFrame</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> canvasSnow = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;canvas_snow&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">img.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">startSakura</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">stopp</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (staticx) &#123;</span><br><span class="line">        <span class="keyword">var</span> child = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;canvas_sakura&quot;</span>);</span><br><span class="line">        child.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(child);</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">cancelAnimationFrame</span>(stop);</span><br><span class="line">        staticx = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">startSakura</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、更换飘浮物"><a href="#二、更换飘浮物" class="headerlink" title="二、更换飘浮物"></a>二、更换飘浮物</h2><p>上述代码第三行，<code>img.src</code>等于什么图片的地址，就飘什么，可自行更换。</p><h2 id="三、调整密集程度"><a href="#三、调整密集程度" class="headerlink" title="三、调整密集程度"></a>三、调整密集程度</h2><p>上述代码中间位置找到以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">SakuraList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params">cxt</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">list</span>[i].<span class="title function_">draw</span>(cxt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二行默认是<code>i &lt; len</code>，<code>len</code>可以更换为数字，数字越大越密集，数字越小越稀疏。</p><h2 id="四、引用文件"><a href="#四、引用文件" class="headerlink" title="四、引用文件"></a>四、引用文件</h2><p>各主题可能不同，大部分是在<code>Hexo\themes\keep\layout\layout.ejs</code>中的body标签里面的最后位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/snow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>keep主题添加后：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;&lt;%= config.language %&gt;&quot;</span>&gt;</span></span><br><span class="line">&lt;%- partial(&#x27;_partial/head&#x27;) %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%- body %&gt;</span><br><span class="line">&lt;%- partial(&#x27;_partial/scripts&#x27;) %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/snow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;更换漂浮物样式，换掉千篇一律的樱花🌸动效&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
    <category term="网站建设" scheme="https://me.sunshj.top/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>Java三大基本排序算法</title>
    <link href="https://me.sunshj.top/archives/java-3basic-sorts/"/>
    <id>https://me.sunshj.top/archives/java-3basic-sorts/</id>
    <published>2022-03-06T10:15:56.323Z</published>
    <updated>2022-03-08T16:12:56.212Z</updated>
    
    <content type="html"><![CDATA[<p>Java数据结构与算法 - 三大基本排序：冒泡、插入、选择排序</p><span id="more"></span><blockquote><p>在线排序算法可视化网站 - <strong><a class="link"   href="https://visualgo.net/zh/sorting" >visualgo.net<i class="fas fa-external-link-alt"></i></a></strong></p></blockquote><p><strong>问：</strong>现在给定一个数组，但是数组里面的数据是乱序排列的，如何使它变得有序？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>&#125;;</span><br></pre></td></tr></table></figure><h2 id="一、冒泡排序"><a href="#一、冒泡排序" class="headerlink" title="一、冒泡排序"></a>一、冒泡排序</h2><p>就是比较相邻的元素，如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，第一轮后最后的元素会是最大的数。重复进行以上步骤，但是已排序后的最大数、次大数等不应再继续进行比较，直到没有任何一对数字需要比较即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*冒泡排序实现*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>&#125;;</span><br><span class="line">        test(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">             <span class="comment">// 设定一个标记，若为true，则表示此次循环没有进行交换，也就是待排序列已经有序，排序已经完成。</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span> - j; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] &gt; arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                    b = <span class="literal">false</span>;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">                    arr[i] = arr[i + <span class="number">1</span>];</span><br><span class="line">                    arr[i + <span class="number">1</span>] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k : arr) &#123;</span><br><span class="line">                System.out.print(k + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、插入排序"><a href="#二、插入排序" class="headerlink" title="二、插入排序"></a>二、插入排序</h2><p>插入排序其实就跟我们打牌是一样的，我们在摸牌的时候，牌堆是乱序的，但是我们一张一张摸到手中进行排序，使得它变成了有序的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*插入排序实现*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsertionSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>&#125;;</span><br><span class="line">        test(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; tmp &lt; arr[j]) &#123;</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                arr[j] = tmp;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k : arr) &#123;</span><br><span class="line">                System.out.print(k + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、选择排序"><a href="#三、选择排序" class="headerlink" title="三、选择排序"></a>三、选择排序</h2><p>选择排序其实就是每次都选择最小（或最大）的一个数，放在起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的数的后面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选择排序实现*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SelectionSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>&#125;;</span><br><span class="line">        test(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &lt; min) &#123;</span><br><span class="line">                    min = arr[j];</span><br><span class="line">                    pos = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = min;</span><br><span class="line">            arr[pos] = tmp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k : arr) &#123;</span><br><span class="line">                System.out.print(k + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java数据结构与算法 - 三大基本排序：冒泡、插入、选择排序&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Java" scheme="https://me.sunshj.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7虚拟机网络连接图标消失解决方法</title>
    <link href="https://me.sunshj.top/archives/centos7-internet-disappear/"/>
    <id>https://me.sunshj.top/archives/centos7-internet-disappear/</id>
    <published>2022-03-03T06:04:18.422Z</published>
    <updated>2022-03-08T16:09:55.756Z</updated>
    
    <content type="html"><![CDATA[<p>此篇解决的是Centos7虚拟机（适用于有桌面的<em>Server</em> with <em>GUI</em> 版本）网络连接图标消失导致无法联网的解决方法</p><span id="more"></span><h1 id="CentOS-7虚拟机网络连接图标消失导致无法联网"><a href="#CentOS-7虚拟机网络连接图标消失导致无法联网" class="headerlink" title="CentOS 7虚拟机网络连接图标消失导致无法联网?"></a>CentOS 7虚拟机网络连接图标消失导致无法联网?</h1><p>最有效解决方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /var/lib/NetworkManager /var/lib/NetworkManager.bak</span><br><span class="line"></span><br><span class="line">systemctl restart NetworkManager</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇解决的是Centos7虚拟机（适用于有桌面的&lt;em&gt;Server&lt;/em&gt; with &lt;em&gt;GUI&lt;/em&gt; 版本）网络连接图标消失导致无法联网的解决方法&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Linux" scheme="https://me.sunshj.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Spark完全分布式安装及简单Scala编程</title>
    <link href="https://me.sunshj.top/archives/Spark/"/>
    <id>https://me.sunshj.top/archives/Spark/</id>
    <published>2022-03-03T05:48:51.229Z</published>
    <updated>2022-03-08T16:10:17.048Z</updated>
    
    <content type="html"><![CDATA[<p>基于Hadoop环境的Spark完全分布式安装及在Windows下使用IDEA进行Scala编程</p><span id="more"></span><h2 id="一、Spark完全分布式安装"><a href="#一、Spark完全分布式安装" class="headerlink" title="一、Spark完全分布式安装"></a>一、Spark完全分布式安装</h2><blockquote><p>首先确保已经安装好完全分布式Hadoop环境，谨记Spark与Hadoop版本的兼容性</p></blockquote><table><thead><tr><th align="center">安装包</th></tr></thead><tbody><tr><td align="center"><a class="link"   href="https://downloads.lightbend.com/scala/2.11.12/scala-2.11.12.tgz" >scala-2.11.12.tgz<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td align="center"><a class="link"   href="https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz" >spark-2.4.5-bin-hadoop2.7.tgz<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><h3 id="1、安装Scala"><a href="#1、安装Scala" class="headerlink" title="1、安装Scala"></a>1、安装Scala</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf scala-2.11.12.tgz</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/sunshj/scala-2.11.12</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SCALA_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>测试scala&amp;打印版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala</span><br><span class="line">scala -version</span><br></pre></td></tr></table></figure><h3 id="2、安装Spark"><a href="#2、安装Spark" class="headerlink" title="2、安装Spark"></a>2、安装Spark</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf spark-2.4.5-bin-hadoop2.7.tgz</span><br><span class="line">mv spark-2.4.5-bin-hadoop2.7 spark-2.4.5</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SPARK_HOME=/home/sunshj/spark-2.4.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/sbin</span><br></pre></td></tr></table></figure><p>使配置文件立即生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure><h3 id="3、配置Spark"><a href="#3、配置Spark" class="headerlink" title="3、配置Spark"></a>3、配置Spark</h3><p>进入Spark的conf目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp spark-env.sh.template spark-env.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp slaves.template slaves</span><br></pre></td></tr></table></figure><p><code>spark-env.sh</code>配置信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/sunshj/jdk1.8</span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/sunshj/scala-2.11.12</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_IP=192.168.1.1</span><br><span class="line"><span class="built_in">export</span> SPARK_WORKER_MEMORY=1G</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/home/sunshj/hadoop-2.7.7/etc/hadoop</span><br></pre></td></tr></table></figure><p><code>slaves</code>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><p>分发到子节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r spark-2.4.5/  sunshj@slave1:/home/sunshj/</span><br><span class="line"></span><br><span class="line">scp -r spark-2.4.5/  sunshj@slave2:/home/sunshj/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r .bashrc  sunshj@slave1:/home/sunshj/</span><br><span class="line"></span><br><span class="line">scp -r .bashrc  sunshj@slave2:/home/sunshj/</span><br></pre></td></tr></table></figure><h3 id="4、启动Spark集群"><a href="#4、启动Spark集群" class="headerlink" title="4、启动Spark集群"></a>4、启动Spark集群</h3><ul><li>首先要启动hadoop集群</li><li>进入Spark的sbin目录，将<code>start-all.sh</code>修改为<code>start-spark.sh</code>，同样把<code>stop-all.sh</code>修改为<code>stop-spark.sh</code>，这样做是因为Spark的sbin目录与Hadoop的sbin目录中有重名shell脚本。</li><li>jps查看master进程中是否多了Master以及Worker，slave1与slave2中是否多了worker。如果有，则正常。</li></ul><h2 id="二、Scala编程实现WordCount程序"><a href="#二、Scala编程实现WordCount程序" class="headerlink" title="二、Scala编程实现WordCount程序"></a>二、Scala编程实现WordCount程序</h2><h3 id="1、windows下安装Scala"><a href="#1、windows下安装Scala" class="headerlink" title="1、windows下安装Scala"></a>1、windows下安装Scala</h3><table><thead><tr><th align="center">安装包</th></tr></thead><tbody><tr><td align="center"><a class="link"   href="https://downloads.lightbend.com/scala/2.11.12/scala-2.11.12.msi" >scala2.11.12.msi<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>添加系统环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">新建SCALA_HOME,内容为scala安装路径</span><br><span class="line">在Path中添加scala的bin路径</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scala -version</span><br></pre></td></tr></table></figure><h3 id="2、IDEA配置"><a href="#2、IDEA配置" class="headerlink" title="2、IDEA配置"></a>2、IDEA配置</h3><blockquote><p>IDEA需要安装Scala插件</p></blockquote><ul><li><p>新建Maven工程，选中<code>Create from archetype</code>，选择<code>org.scala-tools.archetypes:scala-archetypes-simples</code>，按流程创建工程。</p></li><li><p>修改<code>pom.xml</code>，将<code>scala.version</code>标签内容改为<code>2.11.12</code>。并添加以下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-tools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-scala-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-eclipse-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>删除test文件夹内容</p></li></ul><h3 id="3、编写程序"><a href="#3、编写程序" class="headerlink" title="3、编写程序"></a>3、编写程序</h3><ul><li><p>新建<code>Scala Class</code>，选择<code>Object</code>，命名为WordCount</p></li><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-hdfs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>程序代码</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line">           </span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">WordCount</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args : <span class="type">Array</span>[<span class="type">String</span>])</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="string">&quot;WordCount&quot;</span>)</span><br><span class="line">       <span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line">       <span class="keyword">val</span> inFile = sc.textFile(<span class="string">&quot;hdfs://master:9000/input/test.txt&quot;</span>)</span><br><span class="line">       <span class="keyword">val</span> wordCount = inFile.flatMap(_.split(<span class="string">&quot; &quot;</span>)).map(word =&gt; (word,<span class="number">1</span>)).reduceByKey((a,b)=&gt;a+b)</span><br><span class="line">       wordCount.foreach(println)  </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、打包提交"><a href="#4、打包提交" class="headerlink" title="4、打包提交"></a>4、打包提交</h3><p>打包：和java程序打包方法相同，打包为WordCount.jar</p><p>上传至master主机，使用以下命令执行程序，其中 &#96;&#96;{Main-Class}<code> 为你的</code>MANIFEST.MF<code>文件中的 </code>Main-Class&#96;。</p><p>首先删除不必要的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -d WordCount.jar META-INF/*.RSA META-INF/*.DSA META-INF/*.SF</span><br></pre></td></tr></table></figure><p>执行程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spark-submit --class &#123;Main-Class&#125; WordCount.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于Hadoop环境的Spark完全分布式安装及在Windows下使用IDEA进行Scala编程&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="大数据" scheme="https://me.sunshj.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Docker搭建LNMP环境</title>
    <link href="https://me.sunshj.top/archives/centos7-dockerNMP/"/>
    <id>https://me.sunshj.top/archives/centos7-dockerNMP/</id>
    <published>2022-03-03T05:43:14.687Z</published>
    <updated>2022-03-08T16:09:45.977Z</updated>
    
    <content type="html"><![CDATA[<p>使用docker手动安装mysql,php,nginx搭建web环境</p><span id="more"></span><h2 id="一、Centos7安装Docker"><a href="#一、Centos7安装Docker" class="headerlink" title="一、Centos7安装Docker"></a>一、Centos7安装Docker</h2><p>卸载旧版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><p>安装需要的软件包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum -y install git-core</span><br></pre></td></tr></table></figure><p>安装docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum check-update</span><br><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">#查看版本号</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h3 id="docker加速"><a href="#docker加速" class="headerlink" title="docker加速"></a>docker加速</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://awdww488.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="二、docker安装NMP"><a href="#二、docker安装NMP" class="headerlink" title="二、docker安装NMP"></a>二、docker安装NMP</h2><blockquote><p>拉取镜像 (nginx1.12.2,mysql5.7,php7.2)</p></blockquote><h3 id="1、获取-mysql-镜像"><a href="#1、获取-mysql-镜像" class="headerlink" title="1、获取 mysql 镜像"></a>1、获取 mysql 镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><h5 id="启动容器-cyt-mysql"><a href="#启动容器-cyt-mysql" class="headerlink" title="启动容器 cyt_mysql"></a>启动容器 cyt_mysql</h5><blockquote><p>-p:端口映射，映射容器的3306 , 后面就是密码和名称</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name cyt_mysql mysql:5.7</span><br></pre></td></tr></table></figure><h3 id="2、获取-php7-2-镜像"><a href="#2、获取-php7-2-镜像" class="headerlink" title="2、获取 php7.2 镜像"></a>2、获取 php7.2 镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull php:7.2-fpm</span><br></pre></td></tr></table></figure><h5 id="创建-PHPfpm-容器"><a href="#创建-PHPfpm-容器" class="headerlink" title="创建 PHPfpm 容器"></a>创建 PHPfpm 容器</h5><blockquote><p>-v 前面是主机的目录映射容器的目录</p><p>link：挂上msyql</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v /var/nginx/www/html:/var/www/html -p 9000:9000 --link cyt_mysql:mysql --name cyt_phpfpm php:7.2-fpm</span><br></pre></td></tr></table></figure><h5 id="测试目录映射"><a href="#测试目录映射" class="headerlink" title="测试目录映射"></a>测试目录映射</h5><p>使用以下命令进入到PHP容器，就会到var&#x2F;www&#x2F;html 目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it cyt_phpfpm bash</span><br></pre></td></tr></table></figure><p>新建一个PHP文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch test.php</span><br></pre></td></tr></table></figure><p>然后退出容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>到主机的 var&#x2F;nginx&#x2F;www&#x2F;html 目录下也出现了个test.php</p><h5 id="php-的扩展安装"><a href="#php-的扩展安装" class="headerlink" title="php 的扩展安装"></a>php 的扩展安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-php-ext-install pdo_mysql（curl ...）</span><br></pre></td></tr></table></figure><p>要安装php-redis的话，需要另外下载,执行下面这个命令就可以了，有问就no或者空格就好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pecl install redis &amp;&amp; docker-php-ext-enable redis</span><br></pre></td></tr></table></figure><p>安装后 <code>php-m</code></p><h3 id="3、获取-Nginx1-12-2-镜像"><a href="#3、获取-Nginx1-12-2-镜像" class="headerlink" title="3、获取 Nginx1.12.2 镜像"></a>3、获取 Nginx1.12.2 镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:1.12.2</span><br></pre></td></tr></table></figure><h5 id="运行-Nginx-容器"><a href="#运行-Nginx-容器" class="headerlink" title="运行 Nginx 容器"></a>运行 Nginx 容器</h5><blockquote><p>-p:映射80端口 </p><p>-v:映射目录，最好和PHP的一样</p><p> -name:容器名 </p><p>-link：跟PHP关联</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name cyt_nginx -v /var/nginx/www/html:/var/www/html --link cyt_phpfpm:phpfpm --name cyt_nginx nginx:1.12.2</span><br></pre></td></tr></table></figure><h5 id="修改-Nginx-容器配置使其支持-PHP"><a href="#修改-Nginx-容器配置使其支持-PHP" class="headerlink" title="修改 Nginx 容器配置使其支持 PHP"></a>修改 Nginx 容器配置使其支持 PHP</h5><p>进入 Nginx 容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it cyt_nginx bash</span><br></pre></td></tr></table></figure><p>到 conf 目录修改配置文件 default.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>如果提示 vi 命令不存在，那就下一个 vim</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install vim</span><br></pre></td></tr></table></figure><p>把对 php 支持的注释去掉并修改路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 修改</span><br><span class="line">location / &#123;</span><br><span class="line">        root /var/www/html;</span><br><span class="line">        index index.php index.htm index.html;</span><br><span class="line">    &#125;</span><br><span class="line">#取消注释并修改</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">        root           /var/www/html;</span><br><span class="line">        fastcgi_pass   phpfpm:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>重新加载 Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>退出容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用docker手动安装mysql,php,nginx搭建web环境&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Linux" scheme="https://me.sunshj.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ref:rain</title>
    <link href="https://me.sunshj.top/archives/refrain-aimer/"/>
    <id>https://me.sunshj.top/archives/refrain-aimer/</id>
    <published>2022-03-03T05:27:31.222Z</published>
    <updated>2022-03-03T05:41:26.006Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Ref-rain"><a href="#Ref-rain" class="headerlink" title="Ref:rain"></a>Ref:rain</h4><p><strong>歌：Aimer</strong></p><br><p>Raining</p><p><ruby>夏<rp>(</rp><rt>なつ</rt><rp>)</rp></ruby>の<ruby>午後<rp>(</rp><rt>ごご</rt><rp>)</rp></ruby>に</p><p><ruby>通<rp>(</rp><rt>とお</rt><rp>)</rp></ruby>り<ruby>雨<rp>(</rp><rt>あめ</rt><rp>)</rp></ruby><ruby></ruby><ruby>傘<rp>(</rp><rt>かさ</rt><rp>)</rp></ruby>の<ruby>下<rp>(</rp><rt>した</rt><rp>)</rp></ruby></p><p>Kissing</p><p><ruby>濡<rp>(</rp><rt>ぬ</rt><rp>)</rp></ruby>れた<ruby>頬<rp>(</rp><rt>ほお</rt><rp>)</rp></ruby>に</p><p>そっとくちづけた</p><p>あの<ruby>季節<rp>(</rp><rt>きせつ</rt><rp>)</rp></ruby>に</p><p>まだ<ruby>焦<rp>(</rp><rt>こ</rt><rp>)</rp></ruby>がれている</p><p>Miss you</p><p><ruby>窓<rp>(</rp><rt>まど</rt><rp>)</rp></ruby>の<ruby>外<rp>(</rp><rt>そと</rt><rp>)</rp></ruby>に</p><p><ruby>遠<rp>(</rp><rt>とお</rt><rp>)</rp></ruby>ざかる<ruby>景色<rp>(</rp><rt>けしき</rt><rp>)</rp></ruby>たち</p><p>Breezing</p><p><ruby>虹<rp>(</rp><rt>にじ</rt><rp>)</rp></ruby>が<ruby>見<rp>(</rp><rt>み</rt><rp>)</rp></ruby>えた</p><p>すぐに<ruby>消<rp>(</rp><rt>き</rt><rp>)</rp></ruby>えそうで</p><p><ruby>雨<rp>(</rp><rt>あめ</rt><rp>)</rp></ruby> <ruby>明日<rp>(</rp><rt>あした</rt><rp>)</rp></ruby>は</p><p><ruby>降<rp>(</rp><rt>ふ</rt><rp>)</rp></ruby>らなければいい</p><p><ruby>何<rp>(</rp><rt>なに</rt><rp>)</rp></ruby>も<ruby>手<rp>(</rp><rt>て</rt><rp>)</rp></ruby>につかずに</p><p><ruby>上<rp>(</rp><rt>うわ</rt><rp>)</rp></ruby>の<ruby>空<rp>(</rp><rt>そら</rt><rp>)</rp></ruby>の<ruby>日々<rp>(</rp><rt>ひび</rt><rp>)</rp></ruby></p><p>Nothing but you’re the part of me</p><p>まだ<ruby>足<rp>(</rp><rt>た</rt><rp>)</rp></ruby>りなくて</p><p>まだ<ruby>消<rp>(</rp><rt>き</rt><rp>)</rp></ruby>えなくて</p><p><ruby>重<rp>(</rp><rt>かさ</rt><rp>)</rp></ruby>ねた<ruby>手<rp>(</rp><rt>て</rt><rp>)</rp></ruby>のひらから <ruby>幼<rp>(</rp><rt>おさな</rt><rp>)</rp></ruby>さが</p><p>What a good thing we lose？</p><p>What a bad thing we knew</p><p>そんなフレーズに<ruby>濡<rp>(</rp><rt>ぬ</rt><rp>)</rp></ruby>れてく<ruby>雨<rp>(</rp><rt>あめ</rt><rp>)</rp></ruby>の<ruby>中<rp>(</rp><rt>なか</rt><rp>)</rp></ruby></p><p>ただ<ruby>足<rp>(</rp><rt>た</rt><rp>)</rp></ruby>りなくて</p><p>まだ<ruby>言<rp>(</rp><rt>い</rt><rp>)</rp></ruby>えなくて</p><p><ruby>数<rp>(</rp><rt>かぞ</rt><rp>)</rp></ruby>えた<ruby>日<rp>(</rp><rt>ひ</rt><rp>)</rp></ruby>の<ruby>夢<rp>(</rp><rt>ゆめ</rt><rp>)</rp></ruby>から さよならが</p><p>What a good thing we lose？</p><p>What a bad thing we knew</p><p><ruby>触<rp>(</rp><rt>ふ</rt><rp>)</rp></ruby>れられずにいれたら<ruby>笑<rp>(</rp><rt>わら</rt><rp>)</rp></ruby>えたかな？</p><p>Calling</p><p><ruby>白<rp>(</rp><rt>しろ</rt><rp>)</rp></ruby>い<ruby>息<rp>(</rp><rt>いき</rt><rp>)</rp></ruby>が</p><p><ruby>舞<rp>(</rp><rt>ま</rt><rp>)</rp></ruby>い<ruby>上<rp>(</rp><rt>あ</rt><rp>)</rp></ruby>がる<ruby>空<rp>(</rp><rt>そら</rt><rp>)</rp></ruby>の<ruby>下<rp>(</rp><rt>した</rt><rp>)</rp></ruby></p><p>Freezing</p><p><ruby>強<rp>(</rp><rt>つよ</rt><rp>)</rp></ruby>い<ruby>風<rp>(</rp><rt>かぜ</rt><rp>)</rp></ruby>に</p><p><ruby>少<rp>(</rp><rt>すこ</rt><rp>)</rp></ruby>しかじかんだ<ruby>手<rp>(</rp><rt>て</rt><rp>)</rp></ruby>と</p><p><ruby>弱<rp>(</rp><rt>よわ</rt><rp>)</rp></ruby>さをポケットの<ruby>中<rp>(</rp><rt>なか</rt><rp>)</rp></ruby>に</p><p><ruby>何処<rp>(</rp><rt>どこ</rt><rp>)</rp></ruby>を<ruby>見渡<rp>(</rp><rt>みわた</rt><rp>)</rp></ruby>しても</p><p><ruby>通<rp>(</rp><rt>とお</rt><rp>)</rp></ruby>り<ruby>過<rp>(</rp><rt>す</rt><rp>)</rp></ruby>ぎた<ruby>日々<rp>(</rp><rt>ひび</rt><rp>)</rp></ruby></p><p>Nothing but you’re the part of me</p><p>また<ruby>触<rp>(</rp><rt>ふ</rt><rp>)</rp></ruby>れたくて</p><p>ただ<ruby>眩<rp>(</rp><rt>まぶ</rt><rp>)</rp></ruby>しくて</p><p><ruby>思<rp>(</rp><rt>おも</rt><rp>)</rp></ruby>わず<ruby>目<rp>(</rp><rt>め</rt><rp>)</rp></ruby>をそらした<ruby>優<rp>(</rp><rt>やさ</rt><rp>)</rp></ruby>しさに</p><p>Wanna sleep in your feel</p><p>Wanna see you in the deep</p><p>そんなフレーズを<ruby>並<rp>(</rp><rt>なら</rt><rp>)</rp></ruby>べた<ruby>唄<rp>(</rp><rt>うた</rt><rp>)</rp></ruby>を<ruby>今<rp>(</rp><rt>いま</rt><rp>)</rp></ruby></p><p>あの<ruby>帰<rp>(</rp><rt>かえ</rt><rp>)</rp></ruby>り<ruby>道<rp>(</rp><rt>みち</rt><rp>)</rp></ruby> バスに<ruby>揺<rp>(</rp><rt>ゆ</rt><rp>)</rp></ruby>られて</p><p><ruby>叶<rp>(</rp><rt>かな</rt><rp>)</rp></ruby>うはずもないような<ruby>夢<rp>(</rp><rt>ゆめ</rt><rp>)</rp></ruby>をみて</p><p>Wanna sleep in your feel</p><p>Wanna see you in the deep</p><p><ruby>繰<rp>(</rp><rt>く</rt><rp>)</rp></ruby>り<ruby>返<rp>(</rp><rt>かえ</rt><rp>)</rp></ruby>す<ruby>季節<rp>(</rp><rt>きせつ</rt><rp>)</rp></ruby>に<ruby>慣<rp>(</rp><rt>な</rt><rp>)</rp></ruby>れないまま</p><p>もう<ruby>少<rp>(</rp><rt>すこ</rt><rp>)</rp></ruby>し<ruby>暗<rp>(</rp><rt>くら</rt><rp>)</rp></ruby>い<ruby>大人<rp>(</rp><rt>おとな</rt><rp>)</rp></ruby>でいれたら</p><p>なんて<ruby>言<rp>(</rp><rt>い</rt><rp>)</rp></ruby>えただろう？</p><p>まだ<ruby>足<rp>(</rp><rt>た</rt><rp>)</rp></ruby>りなくて</p><p>まだ<ruby>消<rp>(</rp><rt>き</rt><rp>)</rp></ruby>えなくて</p><p><ruby>重<rp>(</rp><rt>かさ</rt><rp>)</rp></ruby>ねた<ruby>手<rp>(</rp><rt>て</rt><rp>)</rp></ruby>のひらから <ruby>幼<rp>(</rp><rt>おさな</rt><rp>)</rp></ruby>さが</p><p>What a good thing we lose?</p><p>What a bad thing we knew</p><p>そんなフレーズに<ruby>濡<rp>(</rp><rt>ぬ</rt><rp>)</rp></ruby>れてく<ruby>雨<rp>(</rp><rt>あめ</rt><rp>)</rp></ruby>の<ruby>中<rp>(</rp><rt>なか</rt><rp>)</rp></ruby></p><p>ただ<ruby>足<rp>(</rp><rt>た</rt><rp>)</rp></ruby>りなくて</p><p>まだ<ruby>言<rp>(</rp><rt>い</rt><rp>)</rp></ruby>えなくて</p><p><ruby>数<rp>(</rp><rt>かぞ</rt><rp>)</rp></ruby>えた<ruby>日<rp>(</rp><rt>ひ</rt><rp>)</rp></ruby>の<ruby>夢<rp>(</rp><rt>ゆめ</rt><rp>)</rp></ruby>から さよならが</p><p>What a good thing we lose?</p><p>What a bad thing we knew</p><p><ruby>触<rp>(</rp><rt>ふ</rt><rp>)</rp></ruby>れられずにいれたら<ruby>笑<rp>(</rp><rt>わら</rt><rp>)</rp></ruby>えたかな？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Ref-rain&quot;&gt;&lt;a href=&quot;#Ref-rain&quot; class=&quot;headerlink&quot; title=&quot;Ref:rain&quot;&gt;&lt;/a&gt;Ref:rain&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;歌：Aimer&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;Raining&lt;</summary>
      
    
    
    
    <category term="音乐" scheme="https://me.sunshj.top/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="歌词" scheme="https://me.sunshj.top/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>国内开源镜像一览</title>
    <link href="https://me.sunshj.top/archives/open-source-mirror/"/>
    <id>https://me.sunshj.top/archives/open-source-mirror/</id>
    <published>2022-03-02T12:20:07.572Z</published>
    <updated>2022-03-08T16:12:43.093Z</updated>
    
    <content type="html"><![CDATA[<p>本篇列举了国内一些开源镜像站以及镜像源的使用方法。</p><span id="more"></span><h1 id="国内开源镜像一览"><a href="#国内开源镜像一览" class="headerlink" title="国内开源镜像一览"></a>国内开源镜像一览</h1><h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2><p>以下是常用的一些镜像源：</p><ul><li><a class="link"   href="http://mirrors.ustc.edu.cn/" >http://mirrors.ustc.edu.cn<i class="fas fa-external-link-alt"></i></a> 中国科学技术大学开源软件镜像，其中<a class="link"   href="https://mirrors.ustc.edu.cn/help/" >帮助页面<i class="fas fa-external-link-alt"></i></a>里有使用方法。</li><li><a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/" >https://mirrors.tuna.tsinghua.edu.cn/<i class="fas fa-external-link-alt"></i></a> 清华大学开源软件镜像，其中<a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help" >帮助页面<i class="fas fa-external-link-alt"></i></a>里有使用方法。</li><li><a class="link"   href="https://mirrors.bfsu.edu.cn/" >https://mirrors.bfsu.edu.cn/<i class="fas fa-external-link-alt"></i></a> 北京外国语大学开源软件镜像，其中<a class="link"   href="https://mirrors.bfsu.edu.cn/help" >帮助页面<i class="fas fa-external-link-alt"></i></a>里有使用方法。</li><li><a class="link"   href="https://developer.aliyun.com/packageSearch" >https://developer.aliyun.com/packageSearch<i class="fas fa-external-link-alt"></i></a> 阿里开源镜像</li><li><a class="link"   href="https://mirrors.huaweicloud.com/" >https://mirrors.huaweicloud.com/<i class="fas fa-external-link-alt"></i></a> 华为开源镜像站</li><li><a class="link"   href="https://mirrors.cloud.tencent.com/" >https://mirrors.cloud.tencent.com/<i class="fas fa-external-link-alt"></i></a> 腾讯软件源</li><li><a class="link"   href="http://mirrors.163.com/" >http://mirrors.163.com/<i class="fas fa-external-link-alt"></i></a> 网易开源镜像站</li></ul><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>1、针对某个项目修改，可以在 <code>pom.xml</code> 里加上新的 <code>repository</code> 标签：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># pom.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>ali-maven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、全局修改，需要首先找到你的 Maven 安装目录，这可以使用 <code>mvn --version</code> 找到。然后修改 <code>$MAVEN_HOME/conf/settings.xml</code> 文件，找到 <code>mirrors</code> 标签，添加如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># settings.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者，你也可以修改 <code>~/.m2/settings.xml</code> 文件（用户目录下的配置文件，优先级比全局更高），如果没有此文件，可以从安装目录复制一份，同样也是加入以上内容。</p><h2 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h2><p>针对某个项目修改，可以在 <code>build.gradle</code> 里添加或修改相应内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># build.gradle</span><br><span class="line">buildscript &#123;</span><br><span class="line">  repositories &#123;</span><br><span class="line">    maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">  repositories &#123;</span><br><span class="line">    maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局修改，可以在 <code>~/.gradle/</code> 文件夹下创建 <code>init.gradle</code> 文件并添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># init.gradle</span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        def ALIYUN_REPOSITORY_URL = &#x27;https://maven.aliyun.com/repository/public&#x27;</span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            if (repo instanceof MavenArtifactRepository) &#123;</span><br><span class="line">                def url = repo.url.toString()</span><br><span class="line">                if (url.startsWith(&#x27;https://repo1.maven.org/maven2&#x27;)) &#123;</span><br><span class="line">                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_REPOSITORY_URL.&quot;</span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123; url ALIYUN_REPOSITORY_URL &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><p><code>pip</code> 是 <code>Python</code> 的包管理工具。</p><p>1、使用清华源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 临时使用</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple [some-package] </span><br><span class="line"># 设置为默认（pip版本大于10.0.0）</span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple </span><br><span class="line"># 使用镜像升级pip</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U </span><br></pre></td></tr></table></figure><p>2、此外也可以使用豆瓣源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.douban.com/simple/ [some-package]</span><br></pre></td></tr></table></figure><h2 id="npm-amp-yarn"><a href="#npm-amp-yarn" class="headerlink" title="npm &amp; yarn"></a>npm &amp; yarn</h2><p><code>npm</code> 和 <code>yarn</code> 都是 <code>JavaScript</code> 世界的包管理工具，其中 <code>yarn</code> 可以通过 <code>npm install -g yarn</code> 安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry # npm查看当前源</span><br><span class="line">npm config set registry https://registry.npm.taobao.org/ # npm设置为淘宝源</span><br><span class="line"></span><br><span class="line">yarn config get registry # yarn查看当前源</span><br><span class="line">yarn config set registry https://registry.npm.taobao.org/ # yarn设置为淘宝源</span><br></pre></td></tr></table></figure><p>此外也可使用 <code>https://r.cnpmjs.org/</code>。官方源为 <code>https://registry.npmjs.org/</code>。</p><h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=on # 启用Go Modules（1.13之后无需设置）</span><br><span class="line">go env | grep GOPROXY # 查看当前源</span><br><span class="line">go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct # 设置阿里源</span><br></pre></td></tr></table></figure><p>如果你使用 <code>GoLand</code>，可以在设置 - Go Modules-Environment 里加上 <code>GOPROXY=https://goproxy.cn</code>。</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>1、对于使用 upstart 的系统（Ubuntu 14.04、Debian 7 Wheezy），在配置文件 <code>/etc/default/docker</code> 中的 <code>DOCKER_OPTS</code> 中配置Hub地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--registry-mirror=https://docker.mirrors.ustc.edu.cn/&quot;</span><br></pre></td></tr></table></figure><p>重新启动服务:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><p>2、对于使用 systemd 的系统（Ubuntu 16.04+、Debian 8+、CentOS 7）， 在配置文件 <code>/etc/docker/daemon.json</code> 中加入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn/&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新启动 docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h2><p>本部分参考<a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" >清华镜像站<i class="fas fa-external-link-alt"></i></a>。首先备份 <code>/etc/apt/sources.list</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure><p>然后修改 <code>/etc/apt/sources.list</code> 文件内容，如下（注意 <code>focal</code> 代表 Ubuntu 20.04 LTS，其他版本需要替换，列表写在下面）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>也可以使用 USTC 源：<code>https://mirrors.ustc.edu.cn/ubuntu/</code>。</p><p>Ubuntu 版本对应列表：</p><ul><li>12.04 LTS: precise</li><li>14.04 LTS: trusty</li><li>16.04 LTS: xenial</li><li>18.04 LTS: bionic</li><li>20.04 LTS: focal</li><li>20.10: groovy</li><li>21.04: hirsute</li></ul><p>最后运行 <code>sudo apt update</code> 更新软件源列表。</p><p>还原官方源：修改为 <code>http://cn.archive.ubuntu.com/ubuntu/</code>。</p><h2 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h2><p>本部分参考<a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/centos/" >清华镜像站<i class="fas fa-external-link-alt"></i></a>。首先备份 <code>/etc/yum.repos.d/CentOS-Base.repo</code>(CentOS 8 为 <code>CentOS-Linux-*.repo</code>)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p>随后运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -e &#x27;s|^mirrorlist=|#mirrorlist=|g&#x27; \</span><br><span class="line">         -e &#x27;s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.tuna.tsinghua.edu.cn|g&#x27; \</span><br><span class="line">         -i.bak \</span><br><span class="line">         /etc/yum.repos.d/CentOS-*.repo</span><br></pre></td></tr></table></figure><p>最后运行 <code>sudo yum makecache</code> 更新软件源缓存。</p><p>还原官方源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /etc/yum.repos.d/*.repo</span><br><span class="line">sudo rpm -Uvh --force http://mirror.centos.org/centos-7/7.7.1908/os/x86_64/Packages/centos-release-7-7.1908.0.el7.centos.x86_64.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇列举了国内一些开源镜像站以及镜像源的使用方法。&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>汉字标注假名转换器</title>
    <link href="https://me.sunshj.top/archives/kanjifurigana/"/>
    <id>https://me.sunshj.top/archives/kanjifurigana/</id>
    <published>2022-02-28T04:21:21.584Z</published>
    <updated>2022-03-08T16:10:36.273Z</updated>
    
    <content type="html"><![CDATA[<p>kuroshiro是一款十分方便使用的日文转换注音工具，主要针对日文文本，进行到平假名、片假名及罗马字的转换，并支持注音假名、送假名 （旁注音）等注音模式。</p><span id="more"></span><h1 id="汉字标注假名转换器"><a href="#汉字标注假名转换器" class="headerlink" title="汉字标注假名转换器"></a>汉字标注假名转换器</h1><blockquote><p>使用到的项目为<a class="link"   href="https://github.com/hexenq/kuroshiro" >kuroshiro<i class="fas fa-external-link-alt"></i></a>，<a class="link"   href="https://www.jsdelivr.com/package/npm/kuromoji" >kuromoji<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、演示"><a href="#一、演示" class="headerlink" title="一、演示"></a>一、演示</h2><p>你可以在<a class="link"   href="https://sunshj.top/tool" >这里<i class="fas fa-external-link-alt"></i></a>查看我的演示。</p><h2 id="二、搭建"><a href="#二、搭建" class="headerlink" title="二、搭建"></a>二、搭建</h2><p>导入<code>kuroshiro.min.js</code>和<code>kuroshiro-analyzer-kuromoji.min.js</code> ，其中<code>kuroshiro.min.js</code>需要使用<code>1.1.0</code>版本。可以直接通过CDN引入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/kuroshiro@1.1.0/dist/kuroshiro.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/kuroshiro-analyzer-kuromoji@1.1.0/dist/kuroshiro-analyzer-kuromoji.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>汉字标注假名<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;static/img/favicon.png&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;static/css/style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/js/kuroshiro.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/js/kuroshiro-analyzer-kuromoji.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;main-title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>汉字标注假名<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 600px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">legend</span>&gt;</span>输入日文<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入或直接贴上日文，点击转换后会自动生成HTML标签&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;clear&quot;</span>&gt;</span>清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;convert&quot;</span>&gt;</span>转换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Ruby 格式<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;RubyOut&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">style</span>=<span class="string">&quot;min-height: 100px;max-width: 600px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">legend</span>&gt;</span>HTML 显示<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;HTMLOut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 版权信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Copyright</span><br><span class="line">            <span class="symbol">&amp;nbsp;</span>2021-<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;year&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//sunshj.top&quot;</span> <span class="attr">target</span>=<span class="string">&quot;blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;个人主页&quot;</span>&gt;</span>sunshj.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/js/handle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">65px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">1px</span>);</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-title</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">resize</span>: none;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> <span class="selector-tag">legend</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f2f2f2</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#input</span> &#123;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">160px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#convert</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2ec033</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#convert</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2ec033</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="built_in">rgb</span>(<span class="number">189</span>, <span class="number">189</span>, <span class="number">189</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">4px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#clear</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#clear</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="built_in">rgb</span>(<span class="number">189</span>, <span class="number">189</span>, <span class="number">189</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">4px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: coral;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">RubyOut</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;RubyOut&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">HTMLOut</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;HTMLOut&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> convert = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;convert&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> clear = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;clear&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> year = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;year&quot;</span>);</span><br><span class="line">year.<span class="property">innerHTML</span> = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化kuroshiro</span></span><br><span class="line"><span class="keyword">let</span> kuroshiro = <span class="keyword">new</span> <span class="title class_">Kuroshiro</span>();</span><br><span class="line"><span class="comment">// 初始化kuroshiro-analyzer-kuromoji</span></span><br><span class="line">kuroshiro.<span class="title function_">init</span>(<span class="keyword">new</span> <span class="title class_">KuromojiAnalyzer</span>(&#123;</span><br><span class="line">    <span class="attr">dictPath</span>: <span class="string">&quot;static/dict/&quot;</span></span><br><span class="line">&#125;))</span><br><span class="line">convert.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    kuroshiro.<span class="title function_">convert</span>(input.<span class="property">value</span>, &#123;</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&quot;furigana&quot;</span>,</span><br><span class="line">        <span class="attr">to</span>: <span class="string">&quot;hiragana&quot;</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">converted</span>) &#123;</span><br><span class="line">        <span class="title class_">RubyOut</span>.<span class="property">value</span> = converted;</span><br><span class="line">        <span class="title class_">HTMLOut</span>.<span class="property">innerHTML</span> = converted;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">clear.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    input.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="title class_">RubyOut</span>.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="title class_">HTMLOut</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="字典文件"><a href="#字典文件" class="headerlink" title="字典文件"></a>字典文件</h3><p>下载<a class="link"   href="https://www.jsdelivr.com/package/npm/kuromoji" >kuromoji<i class="fas fa-external-link-alt"></i></a>项目中<code>dict</code>下的gz文件(共12个)</p><p><a href="https://www.jsdelivr.com/package/npm/kuromoji"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://data.jsdelivr.com/v1/package/npm/kuromoji/badge"                                     ></a></p><h2 id="三、API说明"><a href="#三、API说明" class="headerlink" title="三、API说明"></a>三、API说明</h2><blockquote><p>此处援引kuroshiro官网API说明</p></blockquote><h3 id="convert-str-options"><a href="#convert-str-options" class="headerlink" title="convert(str, [options])"></a>convert(str, [options])</h3><p>转换指定的字符串到指定的音节文字（可在选项中配置注音模式等设置）。</p><p><strong>参数</strong></p><ul><li><code>str</code> - 将被转换的字符串。</li><li><code>options</code> - <em>可选</em> 转换选项，见下表。</li></ul><table><thead><tr><th>选项</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>to</td><td>String</td><td>‘hiragana’</td><td>目标音节文字 <code>hiragana</code> (平假名), <code>katakana</code> (片假名), <code>romaji</code> (罗马字)</td></tr><tr><td>mode</td><td>String</td><td>‘normal’</td><td>转换模式 <code>normal</code> (标准模式), <code>spaced</code> (空格分组), <code>okurigana</code> (送假名), <code>furigana</code> (注音假名)</td></tr><tr><td>romajiSystem*</td><td>String</td><td>“hepburn”</td><td>罗马字体系 <code>nippon</code> (日本式), <code>passport</code> (护照式), <code>hepburn</code> (平文式)</td></tr><tr><td>delimiter_start</td><td>String</td><td>’(‘</td><td>分隔符 (起始)</td></tr><tr><td>delimiter_end</td><td>String</td><td>’)’</td><td>分隔符 (结束)</td></tr></tbody></table><p>**: <code>romajiSystem</code>参数仅当<code>to</code>参数设置为<code>romaji</code>时生效。有关这一参数的更多信息, 请见 <a class="link"   href="https://kuroshiro.org/README.zh-cn.html#%E7%BD%97%E9%A9%AC%E5%AD%97%E4%BD%93%E7%B3%BB" >罗马字体系<i class="fas fa-external-link-alt"></i></a>*</p><p><strong>示例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// normal (标准模式)</span></span><br><span class="line">kuroshiro.<span class="title function_">convert</span>(<span class="string">&quot;感じ取れたら手を繋ごう、重なるのは人生のライン and レミリア最高！&quot;</span>, &#123;<span class="attr">mode</span>:<span class="string">&quot;okurigana&quot;</span>, <span class="attr">to</span>:<span class="string">&quot;hiragana&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>结果：かんじとれたらてをつなごう、かさなるのはじんせいのライン and レミリアさいこう！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// spaced (空格分组)</span></span><br><span class="line">kuroshiro.<span class="title function_">convert</span>(<span class="string">&quot;感じ取れたら手を繋ごう、重なるのは人生のライン and レミリア最高！&quot;</span>, &#123;<span class="attr">mode</span>:<span class="string">&quot;okurigana&quot;</span>, <span class="attr">to</span>:<span class="string">&quot;hiragana&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>结果：かんじとれ たら て を つなご う 、 かさなる の は じんせい の ライン   and   レミ リア さいこう ！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// okurigana (送假名)</span></span><br><span class="line">kuroshiro.<span class="title function_">convert</span>(<span class="string">&quot;感じ取れたら手を繋ごう、重なるのは人生のライン and レミリア最高！&quot;</span>, &#123;<span class="attr">mode</span>:<span class="string">&quot;okurigana&quot;</span>, <span class="attr">to</span>:<span class="string">&quot;hiragana&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>结果：感(かん)じ取(と)れたら手(て)を繋(つな)ごう、重(かさ)なるのは人生(じんせい)のライン and レミリア最高(さいこう)！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// furigana (注音假名)</span></span><br><span class="line">kuroshiro.<span class="title function_">convert</span>(<span class="string">&quot;感じ取れたら手を繋ごう、重なるのは人生のライン and レミリア最高！&quot;</span>, &#123;<span class="attr">mode</span>:<span class="string">&quot;furigana&quot;</span>, <span class="attr">to</span>:<span class="string">&quot;hiragana&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><p>结果：<ruby>感<rp>(</rp><rt>かん</rt><rp>)</rp></ruby>じ<ruby>取<rp>(</rp><rt>と</rt><rp>)</rp></ruby>れたら<ruby>手<rp>(</rp><rt>て</rt><rp>)</rp></ruby>を<ruby>繋<rp>(</rp><rt>つな</rt><rp>)</rp></ruby>ごう、<ruby>重<rp>(</rp><rt>かさ</rt><rp>)</rp></ruby>なるのは<ruby>人生<rp>(</rp><rt>じんせい</rt><rp>)</rp></ruby>のライン and レミリア<ruby>最高<rp>(</rp><rt>さいこう</rt><rp>)</rp></ruby>！</p><h3 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h3><p><strong>示例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const result = Kuroshiro.Util.isHiragana(&quot;あ&quot;));</span><br></pre></td></tr></table></figure><h4 id="isHiragana-char"><a href="#isHiragana-char" class="headerlink" title="isHiragana(char)"></a>isHiragana(char)</h4><p>判断输入字符是否是平假名。</p><h4 id="isKatakana-char"><a href="#isKatakana-char" class="headerlink" title="isKatakana(char)"></a>isKatakana(char)</h4><p>判断输入字符是否是片假名。</p><h4 id="isKana-char"><a href="#isKana-char" class="headerlink" title="isKana(char)"></a>isKana(char)</h4><p>判断输入字符是否是假名。</p><h4 id="isKanji-char"><a href="#isKanji-char" class="headerlink" title="isKanji(char)"></a>isKanji(char)</h4><p>判断输入字符是否是日文汉字。</p><h4 id="isJapanese-char"><a href="#isJapanese-char" class="headerlink" title="isJapanese(char)"></a>isJapanese(char)</h4><p>判断输入字符是否是日文。</p><h4 id="hasHiragana-str"><a href="#hasHiragana-str" class="headerlink" title="hasHiragana(str)"></a>hasHiragana(str)</h4><p>检查输入字符串中是否含有平假名。</p><h4 id="hasKatakana-str"><a href="#hasKatakana-str" class="headerlink" title="hasKatakana(str)"></a>hasKatakana(str)</h4><p>检查输入字符串中是否含有片假名。</p><h4 id="hasKana-str"><a href="#hasKana-str" class="headerlink" title="hasKana(str)"></a>hasKana(str)</h4><p>检查输入字符串中是否含有假名。</p><h4 id="hasKanji-str"><a href="#hasKanji-str" class="headerlink" title="hasKanji(str)"></a>hasKanji(str)</h4><p>检查输入字符串中是否含有日文汉字。</p><h4 id="hasJapanese-str"><a href="#hasJapanese-str" class="headerlink" title="hasJapanese(str)"></a>hasJapanese(str)</h4><p>检查输入字符串中是否含有日文。</p><h4 id="kanaToHiragna-str"><a href="#kanaToHiragna-str" class="headerlink" title="kanaToHiragna(str)"></a>kanaToHiragna(str)</h4><p>转换输入假名字符串至平假名。</p><h4 id="kanaToKatakana-str"><a href="#kanaToKatakana-str" class="headerlink" title="kanaToKatakana(str)"></a>kanaToKatakana(str)</h4><p>转换输入假名字符串至片假名。</p><h4 id="kanaToRomaji-str-system"><a href="#kanaToRomaji-str-system" class="headerlink" title="kanaToRomaji(str, system)"></a>kanaToRomaji(str, system)</h4><p>转换输入假名字符串至罗马字。参数<code>system</code>可选值为<code>&quot;nippon&quot;</code>, <code>&quot;passport&quot;</code>, <code>&quot;hepburn&quot;</code> (默认值: “hepburn”)。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;kuroshiro是一款十分方便使用的日文转换注音工具，主要针对日文文本，进行到平假名、片假名及罗马字的转换，并支持注音假名、送假名 （旁注音）等注音模式。&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="网站建设" scheme="https://me.sunshj.top/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加Tidio在线聊天</title>
    <link href="https://me.sunshj.top/archives/hexo-tidio/"/>
    <id>https://me.sunshj.top/archives/hexo-tidio/</id>
    <published>2022-02-25T11:54:32.949Z</published>
    <updated>2022-03-08T16:09:04.488Z</updated>
    
    <content type="html"><![CDATA[<p>Tidio界面优雅简洁，支持多渠道回复，网页、Windows、安卓、IOS，关键是免费功能对普通用户完全够用。</p><span id="more"></span><h1 id="Hexo添加Tidio在线聊天"><a href="#Hexo添加Tidio在线聊天" class="headerlink" title="Hexo添加Tidio在线聊天"></a>Hexo添加Tidio在线聊天</h1><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p> 访问<a class="link"   href="https://www.tidio.com/panel/register" >Tidio<i class="fas fa-external-link-alt"></i></a>注册账号，可以使用邮箱注册。</p><h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><p>进入账户界面后，可以根据自己的喜好定制，可选颜色，语言，布局，侧边栏等等。</p><p>找到账户面板的Public Key ，待会儿会用到。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在Hexo主题配置文件<code>_config.yml</code>添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Tidio online chat</span><br><span class="line">tidio:</span><br><span class="line">  enable: true</span><br><span class="line">  key: # 替换为你的Public Key</span><br></pre></td></tr></table></figure><p>在Hexo主题目录下的<code>layout/_partial/footer.ejs</code>中添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 在线通讯Tidio --&gt;</span><br><span class="line">&lt;% if (theme.tidio.enable)&#123; %&gt;</span><br><span class="line">&lt;script src=&quot;//code.tidio.co/&lt;%- theme.tidio.key %&gt;.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>到此Tidio的安装就完成了，Hexo三连后刷新页面，在右下角就能看到效果。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Tidio界面优雅简洁，支持多渠道回复，网页、Windows、安卓、IOS，关键是免费功能对普通用户完全够用。&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="网站建设" scheme="https://me.sunshj.top/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>jsDelivr CDN的使用及缓存刷新</title>
    <link href="https://me.sunshj.top/archives/jsDelivrCDN/"/>
    <id>https://me.sunshj.top/archives/jsDelivrCDN/</id>
    <published>2022-02-25T11:00:52.915Z</published>
    <updated>2022-03-08T16:12:37.895Z</updated>
    
    <content type="html"><![CDATA[<p>jsDelivr 是一个免费、开源的加速CDN公共服务。</p><span id="more"></span><h1 id="jsDelivr-CDN的使用及缓存刷新"><a href="#jsDelivr-CDN的使用及缓存刷新" class="headerlink" title="jsDelivr CDN的使用及缓存刷新"></a>jsDelivr CDN的使用及缓存刷新</h1><blockquote><p>本文内容由 <strong><a class="link"   href="https://kelecn.top/posts/22877/" >jsDelivr CDN的使用及缓存刷新<i class="fas fa-external-link-alt"></i></a></strong> 修改而来</p></blockquote><h2 id="一、jsDelivr的使用"><a href="#一、jsDelivr的使用" class="headerlink" title="一、jsDelivr的使用"></a>一、jsDelivr的使用</h2><hr><p> 首先，jsDelivr的使用<a class="link"   href="https://www.jsdelivr.com/features" >官网<i class="fas fa-external-link-alt"></i></a>有很详细的介绍，包括npm、Github、Wordpress，下面主要介绍，我通常使用的Github。</p><p>也就是说，你要引用一个Github文件，它的链接可以是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/user/repo@version/file</span><br></pre></td></tr></table></figure><p>换成中文也就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/您的Github用户名/项目仓库名@项目版本/文件路径</span><br></pre></td></tr></table></figure><p>当然了，有些朋友的项目可能没有设置版本，那么可以写成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/您的Github用户名/项目仓库名@master/文件路径</span><br></pre></td></tr></table></figure><blockquote><p>可以访问<a href="https://www.jsdelivr.com/github"><strong>Migrating from GitHub to jsDelivr</strong></a>页面，自动进行转换</p></blockquote><p>值得注意的是，文件命名请尽量不要用中文，也不要有空格，这样可以解决大部分无法访问的问题。</p><h2 id="二、jsDelivr的缓存刷新"><a href="#二、jsDelivr的缓存刷新" class="headerlink" title="二、jsDelivr的缓存刷新"></a>二、jsDelivr的缓存刷新</h2><hr><p> jsDelivr对于我们这些<del>白嫖怪</del>来说，当然是体验很好啦，可惜还是存在一点点小毛病，比如说，CDN缓存刷新不及时，Github那边我已经修改文件好久了，通过CDN访问还是上一个版本，这就很难受。下面介绍一下如何正确刷新jsDelivr的缓存：</p><h3 id="1、官方工具"><a href="#1、官方工具" class="headerlink" title="1、官方工具"></a>1、官方工具</h3><p>jsDelivr官方说，不久的将来将会推出用于清除CDN缓存的工具，各位可以期待一下。</p><h3 id="2、简单方法"><a href="#2、简单方法" class="headerlink" title="2、简单方法"></a>2、简单方法</h3><p>对于 jsDelivr，缓存刷新的方式其实很简单，只需将想刷新的链接的开头的<strong>cdn</strong> 更改为 <strong>purge</strong>，访问这个接口，返回<strong>status: ok</strong>，就代表缓存刷新了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//刷新前</span><br><span class="line">https://cdn.jsdelivr.net/gh/sunshj/Staticfile@master/js/SakuraPlus.js</span><br><span class="line"></span><br><span class="line">//仅用于刷新返回status: ok，即可</span><br><span class="line">https://purge.jsdelivr.net/gh/sunshj/Staticfile@master/js/SakuraPlus.js</span><br><span class="line"></span><br><span class="line">//重新访问即可</span><br><span class="line">https://cdn.jsdelivr.net/gh/sunshj/Staticfile@master/js/SakuraPlus.js</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;jsDelivr 是一个免费、开源的加速CDN公共服务。&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>深度学习环境配置</title>
    <link href="https://me.sunshj.top/archives/deeplearning-env/"/>
    <id>https://me.sunshj.top/archives/deeplearning-env/</id>
    <published>2022-02-24T09:10:12.204Z</published>
    <updated>2022-03-08T15:56:04.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深度学习环境配置"><a href="#深度学习环境配置" class="headerlink" title="深度学习环境配置"></a>深度学习环境配置</h1><h2 id="一、安装tensorflow"><a href="#一、安装tensorflow" class="headerlink" title="一、安装tensorflow"></a>一、安装tensorflow</h2><h3 id="1、创建虚拟环境"><a href="#1、创建虚拟环境" class="headerlink" title="1、创建虚拟环境"></a>1、创建虚拟环境</h3><p>Python 虚拟环境用于将软件包安装与系统隔离开来。</p><p>创建一个新的虚拟环境，方法是选择 Python 解释器并创建一个 <code>.\venv</code> 目录来存放它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv --system-site-packages .\venv</span><br></pre></td></tr></table></figure><p>激活虚拟环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\venv\Scripts\activate</span><br></pre></td></tr></table></figure><blockquote><p><strong>激活失败</strong>？在计算机上启动 Windows PowerShell 时，执行策略很可能是 Restricted（默认设置）</p><p>想了解 计算机上的现用执行策略，打开PowerShell 然后输入<code>get-executionpolicy</code> ，查看是否为Restricted 。以管理员身份打开PowerShell 输入 <code>set-executionpolicy remotesigned</code> ，选择Y 即可。</p></blockquote><p>在不影响主机系统设置的情况下，在虚拟环境中安装软件包。首先升级 <code>pip</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>退出虚拟环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate  </span><br></pre></td></tr></table></figure><h3 id="2、安装tensorflow"><a href="#2、安装tensorflow" class="headerlink" title="2、安装tensorflow"></a>2、安装tensorflow</h3><p>前提是已进入虚拟环境，指定安装2.6.0版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow==2.6.0</span><br></pre></td></tr></table></figure><h2 id="二、安装pytorch"><a href="#二、安装pytorch" class="headerlink" title="二、安装pytorch"></a>二、安装pytorch</h2><p>同样在虚拟环境下安装pytorch（cpuonly)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision torchaudio</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;深度学习环境配置&quot;&gt;&lt;a href=&quot;#深度学习环境配置&quot; class=&quot;headerlink&quot; title=&quot;深度学习环境配置&quot;&gt;&lt;/a&gt;深度学习环境配置&lt;/h1&gt;&lt;h2 id=&quot;一、安装tensorflow&quot;&gt;&lt;a href=&quot;#一、安装tensorflow&quot;</summary>
      
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="https://me.sunshj.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Github+Nodejs搭建Hexo</title>
    <link href="https://me.sunshj.top/archives/hexo/"/>
    <id>https://me.sunshj.top/archives/hexo/</id>
    <published>2022-02-24T05:28:48.369Z</published>
    <updated>2022-03-08T16:05:53.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github-Nodejs搭建Hexo"><a href="#Github-Nodejs搭建Hexo" class="headerlink" title="Github+Nodejs搭建Hexo"></a>Github+Nodejs搭建Hexo</h1><h2 id="一、使用Github-Pages"><a href="#一、使用Github-Pages" class="headerlink" title="一、使用Github Pages"></a>一、使用Github Pages</h2><p>只需要新建一个以<code>&lt;username&gt;.github.io</code>为名的repository。</p><h2 id="二、安装Git-Bash"><a href="#二、安装Git-Bash" class="headerlink" title="二、安装Git Bash"></a>二、安装Git Bash</h2><p>官网下载<a class="link"   href="https://gitforwindows.org/" >Git Bash<i class="fas fa-external-link-alt"></i></a></p><h2 id="三、安装Node-js"><a href="#三、安装Node-js" class="headerlink" title="三、安装Node.js"></a>三、安装Node.js</h2><p>最新版的Node.js请从<a class="link"   href="https://nodejs.org/zh-cn/" >官网<i class="fas fa-external-link-alt"></i></a>下载。</p><p>设置镜像源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="四、安装Hexo"><a href="#四、安装Hexo" class="headerlink" title="四、安装Hexo"></a>四、安装Hexo</h2><p>命令行执行安装，会有一些报错，但可以无视。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>使用<code>hexo -v</code>查看版本号</p><h3 id="1、初始化"><a href="#1、初始化" class="headerlink" title="1、初始化"></a>1、初始化</h3><p>新建目录如Hexo，目录中执行<code>hexo init</code>，注意，目录必须为空，否则会报错</p><p>接着执行<code>npm install</code>，安装依赖。</p><h3 id="2、预览网页"><a href="#2、预览网页" class="headerlink" title="2、预览网页"></a>2、预览网页</h3><p><code>hexo g</code>会将md文件编译为public下的html文本，<code>hexo s</code>会将网页发布到<code>localhost:4000</code>。</p><p>至此，本地Hexo的部署基本完成。按<code>Ctrl+C</code>以可以关闭部署。</p><h3 id="3、-修改主题"><a href="#3、-修改主题" class="headerlink" title="3、 修改主题"></a>3、 修改主题</h3><p>这里使用keep主题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure><p>安装完成后，在 Hexo 配置文件<code>_config.yml</code>中将 <code>theme</code> 设置为 <code>keep</code>。</p><h3 id="4、部署到Github上"><a href="#4、部署到Github上" class="headerlink" title="4、部署到Github上"></a>4、部署到Github上</h3><p>在 Hexo 配置文件<code>_config.yml</code>中添加deploy参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/sunshj/sunshj.github.io</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="五、Hexo美化"><a href="#五、Hexo美化" class="headerlink" title="五、Hexo美化"></a>五、Hexo美化</h2><blockquote><p>主题配置查看相关主题文档即可</p></blockquote><h3 id="1、永久链接"><a href="#1、永久链接" class="headerlink" title="1、永久链接"></a>1、永久链接</h3><p>修改博客根目录配置文件 <code>_config.yml</code> 的 <code>permalink</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># permalink: :year/:month/:day/:title/</span><br><span class="line"># archives是自定义字段</span><br><span class="line">permalink: archives/:title/</span><br></pre></td></tr></table></figure><h3 id="2、全局音乐播放器"><a href="#2、全局音乐播放器" class="headerlink" title="2、全局音乐播放器"></a>2、全局音乐播放器</h3><p>以<code>keep</code>主题为例，在主题目录下的<code>layout/layout.ejs</code>中的body里面添加以下代码，并开启主题配置文件中的<code>pjax</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引用依赖 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/sunshj/Staticfile@master/aplayer/APlayer.min.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/sunshj/Staticfile@master/aplayer/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/sunshj/Staticfile@master/meting/Meting.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 自行替换相应值,添加data-lrcType=&quot;none&quot;可以设置默认关闭歌词 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aplayer&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;7196241123&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;netease&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;playlist&quot;</span> <span class="attr">data-fixed</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">data-autoplay</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-order</span>=<span class="string">&quot;random&quot;</span> <span class="attr">data-volume</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">data-theme</span>=<span class="string">&quot;#cc543a&quot;</span> <span class="attr">data-preload</span>=<span class="string">&quot;auto&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Github-Nodejs搭建Hexo&quot;&gt;&lt;a href=&quot;#Github-Nodejs搭建Hexo&quot; class=&quot;headerlink&quot; title=&quot;Github+Nodejs搭建Hexo&quot;&gt;&lt;/a&gt;Github+Nodejs搭建Hexo&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="网站建设" scheme="https://me.sunshj.top/tags/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>VSCode&amp;Java8开发环境配置</title>
    <link href="https://me.sunshj.top/archives/vscode-java8/"/>
    <id>https://me.sunshj.top/archives/vscode-java8/</id>
    <published>2021-11-02T13:34:06.000Z</published>
    <updated>2021-11-02T13:38:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VSCode-Java8-开发环境配置"><a href="#VSCode-Java8-开发环境配置" class="headerlink" title="VSCode Java8 开发环境配置"></a>VSCode Java8 开发环境配置</h1><p><strong>下载安装vscode以及java8不在此赘述</strong></p><h2 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h2><blockquote><p>点击扩展(Ctrl+Shift+X) –&gt; 搜索查找 <strong>Extension Pack for Java</strong></p></blockquote><table><thead><tr><th><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.sunshj.top/Pic/images/article/vscodeJava/01.png"                                     ></th></tr></thead></table><blockquote><p>Java 8 不能直接安装上面插件原因：安装插件中 《Language Support for Java(TM) by Red Hat》为最新版只支持Java 11。</p></blockquote><ul><li>在上面搜索Java Extension Pack的界面上，点击安装 【Language Support for Java(TM) by Red Hat】。</li></ul><table><thead><tr><th><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.sunshj.top/Pic/images/article/vscodeJava/02.png"                                     ></th></tr></thead></table><ul><li><p>安装后回到Java Extension Pack的界面，操作如下：</p><blockquote><p><strong>安装0.64.1版本</strong></p></blockquote></li></ul><table><thead><tr><th><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.sunshj.top/Pic/images/article/vscodeJava/03.png"                                     ></th></tr></thead></table><h2 id="设置-Java-路径"><a href="#设置-Java-路径" class="headerlink" title="设置 Java 路径"></a>设置 Java 路径</h2><ul><li><p>打开vscode设置 –&gt; 搜索设置，输入<code> javahome</code> –&gt; 点击 Java: Home下的在 <code>settings.json</code> 中进行编辑。</p></li><li><p>其中，第①行是JAVA_HOME的路径；第②行的话是面向安装Java 8的，输入这行命令不会一直提示安装Java 11 JDK。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;java.home&quot;: &quot;F:\\Java\\jdk1.8&quot;,</span><br><span class="line">&quot;java.requirements.JDK11Warning&quot;: false,</span><br><span class="line">&quot;java.semanticHighlighting.enabled&quot;: true,</span><br></pre></td></tr></table></figure></li></ul><p>配置完之后重启vscode即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VSCode-Java8-开发环境配置&quot;&gt;&lt;a href=&quot;#VSCode-Java8-开发环境配置&quot; class=&quot;headerlink&quot; title=&quot;VSCode Java8 开发环境配置&quot;&gt;&lt;/a&gt;VSCode Java8 开发环境配置&lt;/h1&gt;&lt;p&gt;&lt;s</summary>
      
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Java" scheme="https://me.sunshj.top/tags/Java/"/>
    
  </entry>
  
</feed>
