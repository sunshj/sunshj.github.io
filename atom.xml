<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sunshj&#39;s Blog</title>
  
  
  <link href="https://me.sunshj.top/atom.xml" rel="self"/>
  
  <link href="https://me.sunshj.top/"/>
  <updated>2022-07-07T10:18:22.459Z</updated>
  <id>https://me.sunshj.top/</id>
  
  <author>
    <name>sunshj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CUDA+PyTorch环境配置</title>
    <link href="https://me.sunshj.top/archives/cuda-pytorch/"/>
    <id>https://me.sunshj.top/archives/cuda-pytorch/</id>
    <published>2022-05-06T05:09:00.000Z</published>
    <updated>2022-07-07T10:18:22.459Z</updated>
    
    <content type="html"><![CDATA[<p>Cuda和cuDNN以及pytorch安装<span id="more"></span></p><h2 id="一、CUDA和cuDNN安装"><a href="#一、CUDA和cuDNN安装" class="headerlink" title="一、CUDA和cuDNN安装"></a>一、CUDA和cuDNN安装</h2><h3 id="1、查看系统信息"><a href="#1、查看系统信息" class="headerlink" title="1、查看系统信息"></a>1、查看系统信息</h3><p>在win10的搜索框里搜索 NVIDIA Control Panel，左下角找到<code>系统信息</code>，在<code>组件</code>中查看<code>NVCUDA64.DLL</code>版本。</p><table><thead><tr><th align="center"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/sunshj/Staticfile/img/cuda-01.png"                                     ></th></tr></thead></table><h3 id="2、CUDA下载链接"><a href="#2、CUDA下载链接" class="headerlink" title="2、CUDA下载链接"></a>2、CUDA下载链接</h3><p>最新版本下载链接: <a class="link"   href="https://developer.nvidia.com/zh-cn/cuda-downloads" >https://developer.nvidia.com/zh-cn/cuda-downloads<i class="fas fa-external-link-alt"></i></a></p><p>找过去的版本，在上面的链接页面中找到CUDA早期版本档案，对应的链接是：<a class="link"   href="https://developer.nvidia.com/cuda-toolkit-archive" >https://developer.nvidia.com/cuda-toolkit-archive<i class="fas fa-external-link-alt"></i></a></p><p>找到后，选择对应的操作系统<code>Operating System</code>，架构<code>Architecture</code>（一般默认x86_64），系统版本（<code>version</code>）（10就是win10），安装类型<code>Installer Type</code>（网好就network，一般都选local）</p><h3 id="3、安装"><a href="#3、安装" class="headerlink" title="3、安装"></a>3、安装</h3><p>双击之后弹出的界面，选择的路径是临时解压文件夹，解压完成会自动删除文件夹，CUDA会安装在<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\</code>。</p><h3 id="4、环境变量"><a href="#4、环境变量" class="headerlink" title="4、环境变量"></a>4、环境变量</h3><p>安装完成后会默认配置bin和libnvvp文件夹，还需要添加lib\x64文件夹。</p><table><thead><tr><th align="center"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/sunshj/Staticfile/img/cuda-02.png"                                     ></th></tr></thead></table><h3 id="5、验证"><a href="#5、验证" class="headerlink" title="5、验证"></a>5、验证</h3><p>在命令行输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure><p>打印内容：</p><blockquote><p>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2021 NVIDIA Corporation<br>Built on Fri_Dec_17_18:28:54_Pacific_Standard_Time_2021<br>Cuda compilation tools, release 11.6, V11.6.55<br>Build cuda_11.6.r11.6&#x2F;compiler.30794723_0s</p></blockquote><h3 id="6、下载cuDNN"><a href="#6、下载cuDNN" class="headerlink" title="6、下载cuDNN"></a>6、下载cuDNN</h3><p>下载链接：<a class="link"   href="https://developer.nvidia.com/rdp/cudnn-download" >https://developer.nvidia.com/rdp/cudnn-download<i class="fas fa-external-link-alt"></i></a><br>需要注册一个NVIDA账号，登录之后才可以下载。</p><h3 id="7、安装cuDNN"><a href="#7、安装cuDNN" class="headerlink" title="7、安装cuDNN"></a>7、安装cuDNN</h3><p>解压下载的文件后得到三个文件夹<code>bin、 include、 lib</code>，把这三个文件夹中的所有内容分别放到之前cuda对应的文件夹中，<code>bin-&gt;bin、include-&gt;include、lib-&gt;lib/x64/</code>。</p><h2 id="二、pytorch安装"><a href="#二、pytorch安装" class="headerlink" title="二、pytorch安装"></a>二、pytorch安装</h2><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p>pytorch官网：<a class="link"   href="https://pytorch.org/" >pytorch<i class="fas fa-external-link-alt"></i></a></p><p>选择自己合适的配置，然后去下载就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch==1.11.0+cu113 torchvision==0.12.0+cu113 torchaudio===0.11.0+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html</span><br></pre></td></tr></table></figure><h3 id="2、验证"><a href="#2、验证" class="headerlink" title="2、验证"></a>2、验证</h3><p>在python环境中输入以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">x = torch.rand(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><p>输出类似于：</p><blockquote><p>tensor([[0.3380, 0.3845, 0.3217],<br>        [0.8337, 0.9050, 0.2650],<br>        [0.2979, 0.7141, 0.9069],<br>        [0.1449, 0.1132, 0.1375],<br>        [0.4675, 0.3947, 0.1426]]) </p></blockquote><p>如果想检查GPU驱动和CUDA是否可以被PyTorch使用，运行以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">torch.cuda.is_available()</span><br></pre></td></tr></table></figure><p>输出为True，表示安装成功。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Cuda和cuDNN以及pytorch安装</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="https://me.sunshj.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>本站大数据文章索引</title>
    <link href="https://me.sunshj.top/archives/bigdata-index/"/>
    <id>https://me.sunshj.top/archives/bigdata-index/</id>
    <published>2022-04-28T05:17:00.000Z</published>
    <updated>2022-07-07T10:18:18.400Z</updated>
    
    <content type="html"><![CDATA[<p>对本站所有大数据相关文章进行汇总<span id="more"></span></p><ul><li><a href="https://me.sunshj.top/archives/hadoop/">安装部署Hadoop集群</a></li><li><a href="https://me.sunshj.top/archives/hive/">Hive安装配置</a></li><li><a href="https://me.sunshj.top/archives/sqoop/">SQOOP安装配置及import测试</a></li><li><a href="https://me.sunshj.top/archives/zookeeper/">部署zookeeper</a></li><li><a href="https://me.sunshj.top/archives/hbase/">Hbase安装</a></li><li><a href="https://me.sunshj.top/archives/Spark/">Spark完全分布式安装及简单Scala编程</a></li><li><a href="https://me.sunshj.top/archives/spark-idea-sbt/">IDEA配置Spark开发环境(sbt)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;对本站所有大数据相关文章进行汇总</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="大数据" scheme="https://me.sunshj.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>IDEA配置Spark开发环境(sbt)</title>
    <link href="https://me.sunshj.top/archives/spark-idea-sbt/"/>
    <id>https://me.sunshj.top/archives/spark-idea-sbt/</id>
    <published>2022-04-21T09:04:00.000Z</published>
    <updated>2022-07-07T10:18:39.672Z</updated>
    
    <content type="html"><![CDATA[<p>与<a href="https://me.sunshj.top/archives/Spark/">Spark完全分布式安装及简单Scala编程</a>不同，此次使用sbt创建项目<span id="more"></span></p><h2 id="一、系统配置"><a href="#一、系统配置" class="headerlink" title="一、系统配置"></a>一、系统配置</h2><p>下载<a class="link"   href="https://github.com/cdarlint/winutils" >winutils<i class="fas fa-external-link-alt"></i></a>：下载<code>hadoop-2.7.7</code>，解压至hadoop文件夹</p><p>环境变量：</p><ul><li>新建<code>HADOOP_HOME</code>，写入hadoop路径；</li><li>在Path中添加<code>%HADOOP_HOME%\bin</code></li></ul><h2 id="二、新建项目"><a href="#二、新建项目" class="headerlink" title="二、新建项目"></a>二、新建项目</h2><ul><li>IDEA新建项目</li><li>选择Scala</li><li>选择sbt</li></ul><p>选择合适的JDK以及Scala版本</p><h2 id="三、项目配置"><a href="#三、项目配置" class="headerlink" title="三、项目配置"></a>三、项目配置</h2><p><code>bulid.sbt</code> 添加spark-core (注意版本要与linux中相同)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libraryDependencies += &quot;org.apache.spark&quot; %% &quot;spark-core&quot; % &quot;2.4.5&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;与&lt;a href=&quot;https://me.sunshj.top/archives/Spark/&quot;&gt;Spark完全分布式安装及简单Scala编程&lt;/a&gt;不同，此次使用sbt创建项目</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="大数据" scheme="https://me.sunshj.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Spark完全分布式安装及简单Scala编程</title>
    <link href="https://me.sunshj.top/archives/Spark/"/>
    <id>https://me.sunshj.top/archives/Spark/</id>
    <published>2022-04-21T00:15:00.000Z</published>
    <updated>2022-07-07T10:18:40.693Z</updated>
    
    <content type="html"><![CDATA[<p>基于Hadoop环境的Spark完全分布式安装及在Windows下使用IDEA进行Scala编程</p><span id="more"></span><h2 id="一、Spark完全分布式安装"><a href="#一、Spark完全分布式安装" class="headerlink" title="一、Spark完全分布式安装"></a>一、Spark完全分布式安装</h2><blockquote><p>首先确保已经安装好完全分布式Hadoop环境，谨记Spark与Hadoop版本的兼容性</p></blockquote><table><thead><tr><th align="center">安装包</th></tr></thead><tbody><tr><td align="center"><a class="link"   href="https://downloads.lightbend.com/scala/2.11.12/scala-2.11.12.tgz" >scala-2.11.12.tgz<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td align="center"><a class="link"   href="https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz" >spark-2.4.5-bin-hadoop2.7.tgz<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><h3 id="1、安装Scala"><a href="#1、安装Scala" class="headerlink" title="1、安装Scala"></a>1、安装Scala</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf scala-2.11.12.tgz</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/sunshj/scala-2.11.12</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SCALA_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>测试scala&amp;打印版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala</span><br><span class="line">scala -version</span><br></pre></td></tr></table></figure><h3 id="2、安装Spark"><a href="#2、安装Spark" class="headerlink" title="2、安装Spark"></a>2、安装Spark</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf spark-2.4.5-bin-hadoop2.7.tgz</span><br><span class="line">mv spark-2.4.5-bin-hadoop2.7 spark-2.4.5</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SPARK_HOME=/home/sunshj/spark-2.4.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/sbin</span><br></pre></td></tr></table></figure><p>使配置文件立即生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure><h3 id="3、配置Spark"><a href="#3、配置Spark" class="headerlink" title="3、配置Spark"></a>3、配置Spark</h3><p>进入Spark的conf目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp spark-env.sh.template spark-env.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp slaves.template slaves</span><br></pre></td></tr></table></figure><p><code>spark-env.sh</code>配置信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/sunshj/jdk1.8</span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/home/sunshj/scala-2.11.12</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_IP=192.168.1.1</span><br><span class="line"><span class="built_in">export</span> SPARK_WORKER_MEMORY=1G</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/home/sunshj/hadoop-2.7.7/etc/hadoop</span><br></pre></td></tr></table></figure><p><code>slaves</code>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><p>分发到子节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r spark-2.4.5/  sunshj@slave1:/home/sunshj/</span><br><span class="line"></span><br><span class="line">scp -r spark-2.4.5/  sunshj@slave2:/home/sunshj/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r .bashrc  sunshj@slave1:/home/sunshj/</span><br><span class="line"></span><br><span class="line">scp -r .bashrc  sunshj@slave2:/home/sunshj/</span><br></pre></td></tr></table></figure><h3 id="4、启动Spark集群"><a href="#4、启动Spark集群" class="headerlink" title="4、启动Spark集群"></a>4、启动Spark集群</h3><ul><li>首先要启动hadoop集群</li><li>进入Spark的sbin目录，将<code>start-all.sh</code>修改为<code>start-spark.sh</code>，同样把<code>stop-all.sh</code>修改为<code>stop-spark.sh</code>，这样做是因为Spark的sbin目录与Hadoop的sbin目录中有重名shell脚本。</li><li>jps查看master进程中是否多了Master以及Worker，slave1与slave2中是否多了worker。如果有，则正常。</li></ul><h2 id="二、Scala编程实现WordCount程序"><a href="#二、Scala编程实现WordCount程序" class="headerlink" title="二、Scala编程实现WordCount程序"></a>二、Scala编程实现WordCount程序</h2><h3 id="1、windows下安装Scala"><a href="#1、windows下安装Scala" class="headerlink" title="1、windows下安装Scala"></a>1、windows下安装Scala</h3><table><thead><tr><th align="center">安装包</th></tr></thead><tbody><tr><td align="center"><a class="link"   href="https://downloads.lightbend.com/scala/2.11.12/scala-2.11.12.msi" >scala2.11.12.msi<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>添加系统环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">新建SCALA_HOME,内容为scala安装路径</span><br><span class="line">在Path中添加scala的bin路径</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scala -version</span><br></pre></td></tr></table></figure><h3 id="2、IDEA配置"><a href="#2、IDEA配置" class="headerlink" title="2、IDEA配置"></a>2、IDEA配置</h3><blockquote><p>IDEA需要安装Scala插件</p></blockquote><ul><li><p>新建Maven工程，选中<code>Create from archetype</code>，选择<code>org.scala-tools.archetypes:scala-archetypes-simples</code>，按流程创建工程。</p></li><li><p>修改<code>pom.xml</code>，将<code>scala.version</code>标签内容改为<code>2.11.12</code>。并添加以下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-tools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-scala-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-eclipse-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>删除test文件夹内容</p></li></ul><h3 id="3、编写程序"><a href="#3、编写程序" class="headerlink" title="3、编写程序"></a>3、编写程序</h3><ul><li><p>新建<code>Scala Class</code>，选择<code>Object</code>，命名为WordCount</p></li><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-hdfs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>程序代码</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line">           </span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">WordCount</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args : <span class="type">Array</span>[<span class="type">String</span>])</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="string">&quot;WordCount&quot;</span>)</span><br><span class="line">       <span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line">       <span class="keyword">val</span> inFile = sc.textFile(<span class="string">&quot;hdfs://master:9000/input/test.txt&quot;</span>)</span><br><span class="line">       <span class="keyword">val</span> wordCount = inFile.flatMap(_.split(<span class="string">&quot; &quot;</span>)).map(word =&gt; (word,<span class="number">1</span>)).reduceByKey((a,b)=&gt;a+b)</span><br><span class="line">       wordCount.foreach(println)  </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、打包提交"><a href="#4、打包提交" class="headerlink" title="4、打包提交"></a>4、打包提交</h3><p>打包：和java程序打包方法相同，打包为WordCount.jar</p><p>上传至master主机，使用以下命令执行程序，其中 <code>&#123;Main-Class&#125;</code> 为你的<code>MANIFEST.MF</code>文件中的 <code>Main-Class</code>。</p><p>首先删除不必要的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -d WordCount.jar META-INF/*.RSA META-INF/*.DSA META-INF/*.SF</span><br></pre></td></tr></table></figure><p>执行程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spark-submit --class &#123;Main-Class&#125; WordCount.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于Hadoop环境的Spark完全分布式安装及在Windows下使用IDEA进行Scala编程&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="大数据" scheme="https://me.sunshj.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>GitHub + jsDelivr + PicGo图床</title>
    <link href="https://me.sunshj.top/archives/github-picgo/"/>
    <id>https://me.sunshj.top/archives/github-picgo/</id>
    <published>2022-04-15T02:32:00.000Z</published>
    <updated>2022-07-07T10:18:24.480Z</updated>
    
    <content type="html"><![CDATA[<p>此篇介绍如何搭建 GitHub + jsDelivr + PicGo的免费图床<span id="more"></span></p><h2 id="一、Github配置"><a href="#一、Github配置" class="headerlink" title="一、Github配置"></a>一、Github配置</h2><p>1、创建一个<code>公开(public)</code>的Github资料库(repository)：例如<code>staticfile</code></p><p>2、点击个人账号头像，点击<code>settings</code>，点击<code>Developer settings</code>，点击<code>Personal access tokens</code>，点击<code>Generate New token</code>，输入自定义<code>Note</code>名 ，并勾选<code>repo</code>所有的选项。</p><table><thead><tr><th align="center"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/sunshj/Staticfile/img/github-create-tokens.png"                                     ></th></tr></thead></table><p><strong>创建完成后会生成Token，只会出现一次，记得保存备用。</strong></p><h2 id="二、PicGo上传图片工具下载配置"><a href="#二、PicGo上传图片工具下载配置" class="headerlink" title="二、PicGo上传图片工具下载配置"></a>二、PicGo上传图片工具下载配置</h2><p>1、下载地址：<a class="link"   href="https://github.com/Molunerfinn/PicGo/releases" >https://github.com/Molunerfinn/PicGo/releases<i class="fas fa-external-link-alt"></i></a></p><p>2、PicGo选择配置github图床</p><ul><li>设定仓库名：<code>github账号/仓库名</code></li><li>设定分支名：<code>master</code></li><li>设定Token：填写刚才我们生成的 Token</li><li>指定存储路径：如果需要指定子目录可以填写例如 <code>img/</code>，不填则会上传至仓库根目录</li><li>设定自定义域名：<code> https://cdn.jsdelivr.net/gh/github账号/仓库名</code></li><li>最后设为默认图床，下次再上传图片就会自动上传到 github 图床了。</li></ul><table><thead><tr><th align="center"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/sunshj/Staticfile/img/picgo-github-setting.png"                                     ></th></tr></thead></table><p>3、配置好之后，就可以切换到 “上传区” 选择 “图片上传 - GitHub图床” 后就可以上传图片了，支持拖拽、点击、剪贴板上传，上传后，图片链接会自动复制到剪贴板中。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇介绍如何搭建 GitHub + jsDelivr + PicGo的免费图床</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>本站音乐文章索引</title>
    <link href="https://me.sunshj.top/archives/music-index/"/>
    <id>https://me.sunshj.top/archives/music-index/</id>
    <published>2022-04-14T09:01:00.000Z</published>
    <updated>2022-07-07T10:18:35.615Z</updated>
    
    <content type="html"><![CDATA[<p>对本站所有音乐文章进行汇总<span id="more"></span></p><ul><li><a href="https://me.sunshj.top/archives/yorunikakeru-yoasobi/">夜に駆ける</a></li><li><a href="https://me.sunshj.top/archives/daisyblue/">Daisy Blue</a></li><li><a href="https://me.sunshj.top/archives/yasashiisuisei-yoasobi/">優しい彗星</a></li><li><a href="https://me.sunshj.top/archives/harunoyuki/">ハルノユキ</a></li><li><a href="https://me.sunshj.top/archives/koinouta/">恋のうた</a></li><li><a href="https://me.sunshj.top/archives/sekaiichihana-smap/">世界に一つだけの花</a></li><li><a href="https://me.sunshj.top/archives/hyouka-madoromi/">まどろみの約束</a></li><li><a href="https://me.sunshj.top/archives/honeyworks-daikirai/">大嫌いなはずだった</a></li><li><a href="https://me.sunshj.top/archives/gunjou-yoasobi/">群青</a></li><li><a href="https://me.sunshj.top/archives/tenkinoko-ed/">愛にできることはまだあるかい</a></li><li><a href="https://me.sunshj.top/archives/irony-claris/">Irony - ClariS</a></li><li><a href="https://me.sunshj.top/archives/grandescape/">グランドエスケープ</a></li><li><a href="https://me.sunshj.top/archives/seishunprologue/">青春プロローグ</a></li><li><a href="https://me.sunshj.top/archives/halzion-yoasobi/">ハルジオン</a></li><li><a href="https://me.sunshj.top/archives/fushigikarute-moviever/">不可思議のカルテ</a></li><li><a href="https://me.sunshj.top/archives/mousukoshidake-yoasobi/">もう少しだけ</a></li><li><a href="https://me.sunshj.top/archives/yellow-yohkamiyama/">YELLOW</a></li><li><a href="https://me.sunshj.top/archives/everyworld-yui-solo/">エブリデイワールド</a></li><li><a href="https://me.sunshj.top/archives/bokunokokorowotsukutteyo/">僕の心を作ってよ</a></li><li><a href="https://me.sunshj.top/archives/doraemon3d-ed/">ひまわりの約束</a></li><li><a href="https://me.sunshj.top/archives/doraemon-op/">夢をかなえてドラえもん</a></li><li><a href="https://me.sunshj.top/archives/negakoro/">願い ~ あの頃のキミへ ~</a></li><li><a href="https://me.sunshj.top/archives/sangenshoku/">三原色</a></li><li><a href="https://me.sunshj.top/archives/yoasobi-loveletter/">ラブレター</a></li><li><a href="https://me.sunshj.top/archives/refrain-aimer/">Ref:rain</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;对本站所有音乐文章进行汇总</summary>
    
    
    
    <category term="音乐" scheme="https://me.sunshj.top/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Docker+青龙面板部署京东签到脚本</title>
    <link href="https://me.sunshj.top/archives/jdscf-docker-ql/"/>
    <id>https://me.sunshj.top/archives/jdscf-docker-ql/</id>
    <published>2022-04-14T05:22:00.000Z</published>
    <updated>2022-07-07T10:18:30.559Z</updated>
    
    <content type="html"><![CDATA[<p>此篇使用Docker+青龙面板运行京东签到脚本<span id="more"></span></p><h2 id="一、安装Docker"><a href="#一、安装Docker" class="headerlink" title="一、安装Docker"></a>一、安装Docker</h2><h3 id="1、更新"><a href="#1、更新" class="headerlink" title="1、更新"></a>1、更新</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><h3 id="2、安装依赖"><a href="#2、安装依赖" class="headerlink" title="2、安装依赖"></a>2、安装依赖</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum -y install git-core</span><br></pre></td></tr></table></figure><h3 id="3、安装Docker"><a href="#3、安装Docker" class="headerlink" title="3、安装Docker"></a>3、安装Docker</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo yum check-update</span><br><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><h2 id="二、安装青龙面板-用于定时执行脚本"><a href="#二、安装青龙面板-用于定时执行脚本" class="headerlink" title="二、安装青龙面板(用于定时执行脚本):"></a>二、安装青龙面板(用于定时执行脚本):</h2><ol><li>运行青龙面板Docker镜像</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit -v <span class="variable">$PWD</span>/ql/config:/ql/config -v <span class="variable">$PWD</span>/ql/log:/ql/log -v <span class="variable">$PWD</span>/ql/db:/ql/db -p 5600:5600 --name qinglong --hostname qinglong --restart always whyour/qinglong:latest</span><br></pre></td></tr></table></figure><ol start="2"><li>在浏览器访问127.0.0.1:5600, 按照提示完成初始化</li></ol><h2 id="三、创建任务"><a href="#三、创建任务" class="headerlink" title="三、创建任务"></a>三、创建任务</h2><p>在青龙面板<strong>右上角点击新建任务</strong>, 配置:</p><ul><li><p>命令: </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://github.com/cweijan/JD_tencent_scf.git <span class="string">&quot;src&quot;</span> <span class="string">&quot;test|new|test_index&quot;</span> <span class="string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>定时规则: <code>50 */2 * * *</code></p></li></ul><h2 id="四、配置文件"><a href="#四、配置文件" class="headerlink" title="四、配置文件"></a>四、配置文件</h2><p>添加: <code>export PT_KEY=&quot;&quot;;</code>和<code>export PT_PIN=&quot;&quot;;</code>，如果是多个用户使用：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JD_COOKIE=<span class="string">&quot;pt_key=XXX;pt_pin=XXX;&amp;pt_key=XXX;pt_pin=XXX;&quot;</span></span><br></pre></td></tr></table></figure><p>获取京东cookie：访问 <a class="link"   href="https://plogin.m.jd.com/login/login" >https://plogin.m.jd.com/login/login<i class="fas fa-external-link-alt"></i></a> ，手机号登录获取cookie中的 <code>pt_key</code>, <code>pt_pin</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此篇使用Docker+青龙面板运行京东签到脚本</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Linux" scheme="https://me.sunshj.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>TIM修改个人文件夹位置</title>
    <link href="https://me.sunshj.top/archives/tim-setting/"/>
    <id>https://me.sunshj.top/archives/tim-setting/</id>
    <published>2022-04-11T03:19:00.000Z</published>
    <updated>2022-07-07T10:18:41.705Z</updated>
    
    <content type="html"><![CDATA[<p>TIM无法修改个人文件夹位置的解决方法</p><span id="more"></span><ol><li><p>打开TIM设置界面，找到个人文件夹设置的地方，点击“打开个人文件夹”按钮，会打开当前的个人文件夹。</p></li><li><p>完全退出TIM。</p></li><li><p>到个人文件夹的上一层目录，把里面的QQ号码文件夹和All Users文件夹移动或复制到新的个人文件夹位置，比如 <code>D:\TIM\Tencent Files</code> 目录下。</p></li><li><p>进入 <code>C:\Users\Public\Documents\Tencent\QQ</code> 目录（如果没有这个目录，请自行创建，Windows10中文版可能是<code>C盘&gt;用户&gt;公用&gt;公用文档</code>），在该目录下右键新建文本文件，并重命名为<code>UserDataInfo.ini</code></p></li><li><p>双击打开 <code>UserDataInfo.ini</code> 文件，将下列内容复制粘贴进去，<code>UserDataSavePath=D:\TIM\Tencent Files</code>  这里就是指定新的个人文件夹位置，保存并关闭。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[UserDataImportSet]</span><br><span class="line">NeedImport=0</span><br><span class="line">OldVersion=</span><br><span class="line">OldVerDataPathType=</span><br><span class="line">OldVerDataPath=</span><br><span class="line">OldQQInstallPath=C:\Program Files (x86)\Tencent\QQ</span><br><span class="line">[UserDataSet]</span><br><span class="line">UserDataSavePathType=2</span><br><span class="line">UserDataSavePath=D:\TIM\Tencent Files</span><br><span class="line">NewVersion=</span><br></pre></td></tr></table></figure><ol start="6"><li>重新启动TIM，打开配置界面，就可以看到修改已经生效了。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;TIM无法修改个人文件夹位置的解决方法&lt;/p&gt;</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="教程" scheme="https://me.sunshj.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>HTML中使footer保持在页面底部</title>
    <link href="https://me.sunshj.top/archives/html-footer/"/>
    <id>https://me.sunshj.top/archives/html-footer/</id>
    <published>2022-03-26T03:14:00.000Z</published>
    <updated>2022-07-07T10:18:28.532Z</updated>
    
    <content type="html"><![CDATA[<p>当页面中主体内容不够多、无法将内容区域撑开时，会在 footer 下面留下一大块空白。但是又希望footer能在窗口最底端。下面两种方法可以完美解决这个问题<span id="more"></span></p><h1 id="HTML中使footer保持在页面底部"><a href="#HTML中使footer保持在页面底部" class="headerlink" title="HTML中使footer保持在页面底部"></a>HTML中使footer保持在页面底部</h1><blockquote><p>本文转载自CSDN - <strong><a class="link"   href="https://blog.csdn.net/m0_38099607/article/details/71598423" >NINE-NINE<i class="fas fa-external-link-alt"></i></a></strong> </p></blockquote><h2 id="一、footer高度固定-绝对定位"><a href="#一、footer高度固定-绝对定位" class="headerlink" title="一、footer高度固定+绝对定位"></a>一、footer高度固定+绝对定位</h2><p>思路：footer的父层的最小高度是100%，footer设置成相对于父层位置绝对（absolute）置底（bottom：0），父层内要预留（padding-bottom）footer的高度。</p><p>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>HEADER<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>MAIN<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>FOOTER<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="comment">/*保证footer是相对于container位置绝对定位*/</span></span><br><span class="line">    <span class="attribute">position</span>:relative;  </span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">100%</span>; </span><br><span class="line">    <span class="comment">/*设置padding-bottom值大于等于footer的height值，以保证main的内容能够全部显示出来而不被footer遮盖；*/</span>  </span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">100px</span>;  </span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;   <span class="comment">/* footer的高度一定要是固定值*/</span> </span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在main区域设置了浮动啥的你会发现footer固定在页面可视区的底部，且覆盖在内容上，这时候只要在footer的父元素样式上增加（overflow : hidden；）即可；</p><h2 id="二、采用-flexbox布局模型"><a href="#二、采用-flexbox布局模型" class="headerlink" title="二、采用 flexbox布局模型"></a>二、采用 flexbox布局模型</h2><p>思路：我们将 body 的 display 属性设置为 flex, 然后将方向属性设置为列, （默认是行，也就是横向布局）；同时，将html 和 body 元素的高度设置为100%，使其充满整个屏幕。</p><p>HTML代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>HEADER<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>MAIN<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>FOOTER<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS代码：<br>我们需要调整各个区域占用的页面空间，我们将通过flex 属性来达到这一目的，该属性实际包含了三个属性，分别是：<br>（1）<code>flex-grow</code>：元素在同一容器中对可分配空间的分配比率，及扩展比率；<br>（2）<code>flex-shrink</code>：如果空间不足，元素的收缩比率；<br>（3）<code>flex-basis</code>：元素的伸缩基准值；</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: orange;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;当页面中主体内容不够多、无法将内容区域撑开时，会在 footer 下面留下一大块空白。但是又希望footer能在窗口最底端。下面两种方法可以完美解决这个问题</summary>
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>计算机二级公共基础知识笔记</title>
    <link href="https://me.sunshj.top/archives/ncre-notes/"/>
    <id>https://me.sunshj.top/archives/ncre-notes/</id>
    <published>2022-03-13T07:42:00.000Z</published>
    <updated>2022-07-07T10:18:36.632Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载自<a class="link" href="https://zhuanlan.zhihu.com/p/100698395">知乎<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="一、数据结构与算法"><a href="#一、数据结构与算法" class="headerlink" title="一、数据结构与算法"></a>一、数据结构与算法</h2><ol><li><p>算法的基本运算和操作：算术运算，逻辑运算，<strong>关系运算</strong>，<strong>数据传输</strong>。</p></li><li><p>算法基本设计方法：列举法、归纳法、递推、递归、减半递推技术。</p></li><li><p><strong>数据元素</strong>：数据元素是<strong>数据的基本单位</strong>。</p></li><li><p><strong>数据对象</strong>：数据对象是<strong>性质相同的数据元素的集合</strong>。</p></li><li><p><strong>数据结构</strong>：是指由某一<strong>数据对象中所有数据成员之间的关系组成的集合</strong>。</p></li><li><p>数据的逻辑结构包括数据对象和数据对象之间的关系。</p></li><li><p>数据的存储结构包括数据元素的存储方式和关系的存储方式。</p></li><li><p><strong>一种数据的逻辑结构</strong>可以表示成<strong>多种存储结构。</strong></p></li><li><p><strong>线性结构</strong>的条件（一个非空数据结构)：<br>（1）有且只有一个根结点；<br>（2）每一个结点最多有一个前件，也最多有一个后件。</p></li><li><p>栈、队列、<strong>双向链表</strong>是线性结构；树、二叉树为非线性结构。</p></li><li><p><strong>线性表</strong>是由一组数据元素构成，数据元素的位置只取决于自己的序号，元素之间的相对位置是线性的。具有“<strong>一对一</strong>”逻辑关系的数据，最佳的存储方式是使用线性表。除根结点与终端结点外，其他所有结点有且只有一个前件，也有且只有一个后件。</p></li><li><p>线性表的存储结构：<strong>顺序存储结构</strong>和<strong>链式存储结构</strong>。</p></li><li><p><strong>线性表的顺序存储结构</strong>有两个特点：<br>（1）线性表中所有元素所占的存储空间连续；<br>（2）线性表中各数据元素在存储空间中是按逻辑顺序依次存放的。</p></li><li><p>线性表的链式存储结构存储数据结构的存储空间可以不连续，各数据结点的存储顺序与数据元素之间的逻辑关系可以不一致。结点包含：<strong>数据域</strong>、<strong>指针域</strong>。（注：链式存储方式既可用于表示线性结构，也可用于表示非线性结构）。</p></li><li><p><strong>栈</strong>和<strong>队列</strong>隶属于线性表，是特殊的线性表，因为它们对线性表中元素的进出做了明确的要求。</p></li><li><p><strong>栈</strong>具有<strong>记忆功能</strong>，队列没有记忆功能。栈的特点是先进后出,后进先出,所以对一个栈进行出栈操作,出来的元素肯定是最后存入栈中的元素,所以栈有记忆功能。而队列是先进先出,取队列的第一个元素,得到的是最先存入队列的元素,而不是上一个存入队列的元素,所以没有记忆功能。</p></li><li><p>栈、队列的存储结构：<br>（1）顺序存储结构：用一组地址连续的存储单元即一维数组来存储；<br>（2）链式存储：线性链表。</p></li><li><p>计算循环队列的元素个数：“尾指针减头指针”，若为负数，再加其容量即可。</p></li><li><p>树是 n(n&gt;0) 个结点的有限集合，是一种非线性结构。</p></li><li><p>结点的度：结点所拥有的子树的个数。</p></li><li><p><strong>叶子结点</strong>：<strong>度为0</strong>的结点。</p></li><li><p>分支结点：除叶子结点以外的结点。</p></li><li><p>结点的层次：<strong>根结点在第一层</strong>。</p></li><li><p>树的深度：所处层次最大的那个结点的层次。</p></li><li><p><strong>树的度</strong>：树中<strong>所有结点的度的最大值</strong>。</p></li><li><p>二叉树每个结点最多只有两棵子树，且有左右之分，不能互换，二叉树有<strong>五种不同的形态</strong>。</p></li><li><p>在二叉树的第 k 层上，最多有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="11.284ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 4987.6 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1855.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2244.1,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3042.9,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(4098.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4598.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 个结点。</p></li><li><p>深度为 m 的二叉树最多有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.621ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2926.3 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1426.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2426.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 个结点。</p></li><li><p><strong>在任意一棵二叉树中，度为 0 的结点（叶子结点）总是比度为 2 的结点多一个。</strong></p></li><li><p>具有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个结点的二叉树，其深度不小于 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.768ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4759.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g><g data-mml-node="mo" transform="translate(3259.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4259.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> ，其中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.872ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3037.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container> 表示为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.546ex" xmlns="http://www.w3.org/2000/svg" width="5.614ex" height="2.116ex" role="img" focusable="false" viewBox="0 -694 2481.2 935.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1881.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的整数部分。</p></li><li><p><strong>满二叉树</strong>：每一层上的结点数都达到最大值，即在满二叉树的第 k 层上有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="1.932ex" role="img" focusable="false" viewBox="0 -853.7 1855.1 853.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> 个结点。</p></li><li><p><strong>完全二叉树</strong>：除最后一层外，每一层上的结点数均达到最大值；在最后一层上只缺少右边的若干结点。</p></li><li><p>具有  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个结点的完全二叉树的深度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.768ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4759.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1992.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2159.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2759.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g><g data-mml-node="mo" transform="translate(3259.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4259.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 。</p></li><li><p>完全二叉树中度为 1 的结点数为 0 或 1 。</p></li><li><p><strong>前序遍历</strong>：<strong>先访问根结点</strong>、然后遍历左子树，最后遍历右子树；并且，在遍历左、右子树时，仍然先访问根结点，然后遍历左子树，最后遍历右子树。</p></li><li><p><strong>中序遍历</strong>：先遍历左子树、<strong>然后访问根结点</strong>，最后遍历右子树；并且，在遍历左、右子树时，仍然先遍历左子树，然后访问根结点，最后遍历右子树。</p></li><li><p><strong>后序遍历</strong>：先遍历左子树、然后遍历右子树，<strong>最后访问根结点</strong>；并且，在遍历左、右子树时，仍然先遍历左子树，然后遍历右子树，最后访问根结点。</p></li><li><p><strong>顺序查找</strong>是从表的一端开始，依次扫描表中的各个元素，并与所要查找的数进行比较。</p></li><li><p>只能采用顺序查找：<br>（1）线性表为无序表，则不管是顺序存储结构还是链式存储结构，只能用顺序查找。</p><p>（2）有序线性表，如果采用链式存储结构，也只能用顺序查找。</p></li><li><p><strong>二分查找</strong>的条件：<br>（1）用<strong>顺序存储结构</strong>，<br>（2）线性表是<strong>有序表</strong>。</p></li><li><p>对于长度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的有序线性表，在最坏情况下，二分法查找只需比较  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.546ex" xmlns="http://www.w3.org/2000/svg" width="5.614ex" height="2.116ex" role="img" focusable="false" viewBox="0 -694 2481.2 935.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1881.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 次，而顺序查找需要比较 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 次。</p></li><li><p><strong>排序算法</strong><br>1、<strong>交换类排序</strong><br>（1）冒泡排序法，在最坏的情况下，冒泡排序需要比较次数为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 。</p><p>（2）<strong>快速排序</strong>法 ，在最坏的情况下，快速排序需要比较次数为  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>。</p><p>2、<strong>插入类排序</strong>：<br>（1）简单插入排序法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 次比较；</p><p>（2）<strong>希尔排序</strong>法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.791ex" xmlns="http://www.w3.org/2000/svg" width="7.765ex" height="2.713ex" role="img" focusable="false" viewBox="0 -849.5 3432.3 1199"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mrow" transform="translate(929.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z"></path></g><g data-mml-node="msup" transform="translate(458,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(633,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(2044.7,0) translate(0 -0.5)"><path data-c="29" d="M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z"></path></g></g></g></g></svg></mjx-container> 次比较。</p><p>3、<strong>选择类排序</strong>：<br>（1）简单选择排序法，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(989,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1589,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2367,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2867,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1194.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 次比较；</p><p>（2）<strong>堆排序法</strong>，最坏情况需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="11.212ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4955.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mrow" transform="translate(929.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(1155.7,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1311,-241.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2870.2,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3036.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3636.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container> 次比较。 相比以上几种(除希尔排序法外)，堆排序法的时间复杂度最小。</p></li></ol><h2 id="二、程序设计基础"><a href="#二、程序设计基础" class="headerlink" title="二、程序设计基础"></a>二、程序设计基础</h2><ol><li>形成良好的程序设计风格需注意：<br>①源程序文档化；<br>②数据说明的方法；<br>③语句的结构；<br>④输入和输出。<br>⑤模块设计要保证低耦合、高内聚。<br>(内聚：每个模块尽可能独立完成自己的功能，不依赖于模块外部的代码。<br>耦合：模块与模块之间接口的复杂程度，模块之间联系越复杂耦合度越高，牵一发而动全身。)</li><li>结构化程序设计方法的四条原则：<br>①自顶向下；<br>②逐步求精；<br>③模块化；<br>④限制使用 goto 语句。</li><li>两类循环语句：先判断后执行的循环体称为<strong>当型循环</strong>结构；先执行循环体后判断的称为<strong>直到型循环</strong>结构。</li><li>面向对象的程序设计以对象为核心，强调对象的<strong>抽象性</strong>，<strong>封装性</strong>，<strong>继承性</strong>、<strong>多态性</strong>、（依赖性）。</li><li>对象的基本特点：<br>（1）标识惟一性；<br>（2）分类性；<br>（3）多态性；<br>（4）封装性；<br>（5）模块独立性好。</li><li><strong>属性</strong>：即对象所包含的信息，它在设计对象时确定，一般只能通过执行对象的操作来改变。<strong>类</strong>：是具有相似属性与操作的一组对象。类是关于对象性质的描述。类是对象的抽象，对象是其对应类的一个实例。</li><li><strong>消息</strong>：是一个实例与另一个实例之间传递的信息。对象间的通信靠消息传递。它请求对象执行某一处理或回答某一要求的信息，它统一了数据流和控制流。消息的<strong>组成</strong>包括：<br>（1）接收消息的对象的名称；<br>（2）消息标识符，也称消息名；<br>（3）零个或多个参数。</li><li><strong>多态性</strong>：是指同样的消息被不同的对象接受时可导致完全不同的行动的现象。</li><li>在<strong>软件设计</strong>过程中，必须遵循软件工程的基本原则：这些原则包括<strong>抽象</strong>、<strong>信息隐蔽</strong>、<strong>模块化</strong>、<strong>局部化</strong>、<strong>确定性</strong>、<strong>一致性</strong>、<strong>完备性</strong>和<strong>可靠性</strong>。</li><li><strong>面向对象</strong>的设计方法与传统的的面向过程的方法有本质不同，它的<strong>基本原理是，使用现实世界的概念抽象地思考问题从而自然地解决问题。</strong>它强调模拟现实世界中的概念而不强调算法，它鼓励开发者在软件开发的绝大部分中都用应用领域的概念去思考。</li><li>字符常量是单引号括起来的一个字符，例如 <code>'a'</code>，也可以通过转义序列表示方法表示一些不可显示字符或无法通过键盘输入的字符，例如<code>\n</code>的含义是换行。</li></ol><h2 id="三、软件工程基础"><a href="#三、软件工程基础" class="headerlink" title="三、软件工程基础"></a>三、软件工程基础</h2><ol><li><p><strong>软件</strong>是包括<strong>程序</strong>、<strong>数据</strong>和<strong>相关文档</strong>的完整集合。分为应用软件和系统软件。</p></li><li><p><strong>软件生命周期</strong>是指软件产品从提出、实现、使用维护到停止使用退役的整个过程。可分为软件定义，软件开发及软件维护3个阶段。</p></li><li><p><strong>软件危机</strong>泛指在计算机软件的开发和维护过程中遇到的一系列严重的问题，集中表现在成本、质量、生产效率等几个方面。</p></li><li><p><strong>软件工程</strong>是指采用工程的概念、原理、技术和方法指导软件的开发与维护。软件工程的主要思想强调在软件开发过程中需要应用工程化原则。软件工程的核心思想是把软件当作一个工程产品来处理。</p></li><li><p><strong>软件工程3要素</strong>：方法，工具和过程。</p></li><li><p><strong>软件工程过程</strong>是把软件转化为输出的一组彼此相关的资源活动，包含4种基本活动：<br>（1）<strong>P</strong>(plan) — 软件规格说明；<br>（2）<strong>D</strong>(do) — 软件开发；<br>（3）<strong>C</strong>(check) — 软件确认；<br>（4）<strong>A</strong>(action) — 软件演进。</p></li><li><p>软件工程的理论和技术性研究的内容主要包括<strong>软件开发技术</strong>和<strong>软件工程管理</strong>。</p></li><li><p><strong>软件工程的原则</strong>：抽象，信息隐蔽，模块化，局部化，确定性，一致性，完备性，可验证性。</p></li><li><p>需求分析阶段的工作：需求获取，需求分析，编写需求规格说明书，需求评审。</p></li><li><p><strong>需求分析方法</strong>：<br>（1）<strong>结构化需求分析</strong>方法：<br>①面向数据结构的Jackson方法（JSD）；<br>②面向数据流的结构化分析方法（SA）；<br>③面向数据结构的结构化数据系统开发方法（DSSD）；<br>（2）<strong>面向对象需求分析</strong>方法（OOA）：<br>①静态分析方法<br>②动态分析 方法。</p></li><li><p>结构化方法包括结构化分析方法，结构化设计方法，结构化编程方法。结构化方法中，<strong>软件功能分解</strong>属于<strong>总体设计</strong>阶段。</p></li><li><p><strong>结构化分析</strong>的<strong>常用工具</strong>： </p><p><strong>（1）数据流图</strong>（<strong>DFD</strong>-Data Flow Diagram）：<br>是结构化分析方法中用于系统逻辑模型的一种工具。它以图形的方式描绘在系统中流动和处理的过程。数据流图中四种基本的符号：<br><strong>①【箭头】</strong>：表示【<strong>数据流】</strong>，数据流是数据在系统中传播的路径。</p><p><strong>②圆或椭圆</strong>：表示加工，加工又称为数据处理，是对数据流进行某些操作或变换。<br><strong>③双横</strong>：表示数据存储（数据源）。数据存储又称为文件，指暂时保存的数据，它可以是数据库文件或任何形式的数据组织。<br><strong>④方框</strong>：数据的源点或终点。它是软件系统外部环境中的实体，统称外部实体。</p><p><strong>（2）数据字典（DD）</strong>：<br>它是结构分析方法的<strong>核心</strong>，是用来描述系统中所用到的全部数据和文件的文档,作用是对DFD中出现的被命名的图形元素进行确切解释。<br>数据字典由以下4类元素组成：<br><strong>①数据流</strong><br><strong>②数据流分量</strong><br><strong>③数据存储</strong><br><strong>④处理</strong></p><p><strong>（3）判定树（决策树）</strong>：<br>是一种<strong>描述加工</strong>的图形工具，适合描述时候处理中具有多个判断，而且每个决策与若干条件有关。</p><p><strong>（4）判定表</strong>：<br>与判定树类似，也是一种<strong>描述加工</strong>的图形工具。如果一个加工逻辑有多个条件、多个操作，并且在不同的条件组合下执行不同的操作，那么可以使用判定表来描述。</p></li><li><p><strong>软件需求规格说明书</strong>（<strong>SRS</strong>，Software Requirement Specification）是需求分析阶段得出的最主要的文档。软件需求规格说明书的特点：正确性、<strong>无歧义性</strong>、完整性、可验证性、一致性、可理解性、可修改性和可追踪性。<br>软件需求规格说明书的<strong>作用</strong>：<br>①<strong>便于用户和开发人员进行理解和交流</strong>。<br>②反映出用户问题的结构，可以作为软件开发工作的基础和依据。<br>③作为确认测试和验收的依据。</p></li><li><p><strong>软件设计</strong>是确定系统的物理模型。软件设计是开发阶段最重要的步骤，是将需求准确地转化为完整的软件产品或系统的唯一途径。<br>从技术观点上看，软件设计包括软件结构设计、数据设计、接口设计、过程设计。<br>从工程管理角度来看，软件设计分两步完成：<br>（1）<strong>概要设计</strong>将软件需求转化为软件体系结构、确定系统级接口、全局数据结构或数据库模式；<br>（2）<strong>详细设计</strong>确立每个模块的实现算法和局部数据结构，用适当方法表示算法和数据结构的细节。</p></li><li><p><strong>软件设计的基本原理</strong> ：<br>模块化、抽象化、信息隐藏和局部化（实现信息隐蔽依靠对象的封装）、模块独立性。</p></li><li><p><strong>耦合性</strong>和<strong>内聚性</strong><br>衡量软件的模块独立性的两个定性的度量标准。<br><strong>耦合性</strong>：是对一个软件结构内不同模块之间互联程度的度量。耦合性的强弱取决于模块间接口的复杂程度。<br><strong>内聚性</strong>：是一个模块内部各个元素间彼此结合的紧密程度的度量。<br>一个模块的内聚性越强则该模块的模块独立性越强。一个模块与其他模块的耦合性越强则该模块的模块独立性越弱。<br>在结构程序设计中，模块划分的<strong>原则</strong>是模块内具有<strong>高内聚</strong>度，模块间具有<strong>低耦合</strong>度。<br>耦合度由低到高：<strong>非直接耦合</strong>，数据耦合，标记耦合，控制耦合，外部耦合，公共耦合，内容耦合。<br>内聚性由强到弱：<strong>功能内聚</strong>，顺序内聚，通信内聚，过程内聚，时间内聚，逻辑内聚，偶然内聚。</p></li><li><p><strong>概要设计</strong>的<strong>工具</strong>：<strong>结构图</strong>（<strong>SC</strong>-Structure Chart）也称<strong>程序结构图。</strong><br>在结构图中：<br><strong>矩形</strong>表示模块；<br>【<strong>箭头</strong>表示<strong>模块间的调用关系】</strong>；<br>带注释的箭头表示模块调用过程中来回传递的信息；<br><strong>实心圆箭头</strong>表示传递<strong>控制</strong>信息;<br>空心<strong>圆箭心</strong>表示传递数据。</p><p>结构图的基本形式：基本形式、顺序形式、重复形式、选择形式。<br>结构图有四种模块类型：传入模块、传出模块、变换模块和协调模块。</p></li><li><p>任何软件系统都可以用数据流图表示，典型的<strong>数据流类型</strong>有两种：<strong>变换型</strong>和<strong>事务型</strong>。</p></li><li><p><strong>设计的准则</strong><br>（1）提高模块独立性。<br>（2）模块规模适中。<br>（3）深度，宽度，扇出和扇入适当。<br>如果深度过大，则说明有的控制模块可能简单了，如果宽度过大，则说明系统的控制过于集中，扇出过大说明模块过分复杂，需要控制和协调过多的下级模块，应适当加中间层次，扇出过小可以把模块进一步分解成若干小模块，或合并到上级模块中，扇入越大则共享该模块的上级数目越多。好的软件设计结构通常<strong>顶层高扇出，中间扇出较少，底层高扇入。</strong><br>（4）使模块的作用域在该模块的控制域内。<br>（5）减少模块的接口和界面的复杂性。<br>（6）设计成单入口，单出口的模块。<br>（7）设计功能可预测的模块。</p></li><li><p><strong>详细设计</strong>常用的设计<strong>工具</strong>（工程设计工具）：图形工具，表格工具和语言工具。<br>图形工具：<br><strong>程序流程图</strong>：【<strong>箭头</strong>表示<strong>控制流】</strong>，方框表示加工步骤，菱形表示逻辑条件。<br><strong>N-S图</strong>（盒图）：有五种基本图形。<br><strong>PAD</strong>图（Problem Analysis Diagram）：问题分析图，有五种基本图型。<br>表格工具：判定表。<br>语言工具：PDL—过程设计语言（结构化的英语和伪码）。</p></li><li><p><strong>软件测试</strong>的目标：<strong>发现</strong>程序中的错误。</p></li><li><p><strong>软件测试方法</strong><br>1、静态测试和动态测试<br>①<strong>静态测试</strong><br>包括代码检查、静态结构分析、代码质量度量。<strong>不实际运行软件</strong>，主要通过人工进行。<br>②<strong>动态测试</strong><br>通过<strong>运行软件</strong>来检验软件中的动态行为和运行结果的正确性。<br>2、白盒测试和黑盒测试<br>①<strong>白盒测试</strong><br>也称为结构测试或逻辑测试，是把程序看成装在一只透明的白盒子里，测试者完全了解程序的结构和处理过程。它根据程序的内部逻辑来设计测试用例，检查程序中的逻辑通路是否都按预定的要求正确地工作。<br>白盒测试的方法：逻辑覆盖，基本路经测试。<br>②<strong>黑盒测试</strong><br>也称功能测试或数据驱动测试，是把程序看成一只黑盒子，测试者完全不了解，或不考虑程序的结构和处理过程。它根据规格说明书的功能来设计测试用例，检查程序的功能是否符合规格说明的要求。<br>黑盒测试的方法：等价划分法，边界值分析法，错误推测法。</p></li><li><p>软件测试过程分4个步骤，即<strong>单元测试—&gt;集成测试</strong>—&gt;<strong>验收测试（确认测试）</strong>—&gt;<strong>系统测试</strong>。<br><strong>确认测试：检查软件产品是否符合需求定义。</strong></p></li><li><p><strong>程序调试</strong>是<strong>诊断（而非发现）</strong>和<strong>改正</strong>程序中的错误。</p></li><li><p>主要的调试方法有：<br>（1）强行排错法； （2）回溯法； （3）原因排除法，包括演绎法，归纳法和二分法。</p></li><li><p><strong>结构化分析（属于需求分析方法）</strong>的常用工具：<br>①数据流图（DFD）<br>②数据字典（DD）<br>③判定树<br>④判定表<br><strong>概要设计（开发阶段）</strong>的常用工具：<br>①系统结构图<br><strong>详细设计（开发阶段）</strong>的常用工具：<br>①程序流程图<br>②N-S图（盒图）<br>③PAD图<br>④HIPO图</p></li></ol><h2 id="四、数据库设计基础"><a href="#四、数据库设计基础" class="headerlink" title="四、数据库设计基础"></a>四、数据库设计基础</h2><ol><li><strong>数据（Data）</strong>是数据库存储的基本对象，是描述事物的符号记录。</li><li><strong>数据库（DB）</strong>是长期储存在计算机内、有组织的、可共享的大量数据的集合。<br>它具有统一的结构形式并存放于统一的存储介质内，是多种应用数据的集成，并可被各个应用程序所共享，所以数据库技术的根本目标是解决数据共享问题。</li><li><strong>数据库管理系统（DBMS）</strong>是数据库的管理机构，负责数据库中的数据组织、数据操纵、数据维护、控制及保护和数据服务等。数据库管理系统是数据库系统的<strong>核心</strong>。<strong>数据库系统</strong>包含<strong>数据库</strong>和<strong>数据库管理系统</strong>。<br>数据库管理系统提供相应的数据语言：<br>数据<strong>定义</strong>语言（D<strong>D</strong>L）：负责数据模式定义和数据物理存取构建。<br>数据<strong>操纵</strong>语言（D<strong>M</strong>L）：负责数据的操纵。<br>数据<strong>控制</strong>语言（D<strong>C</strong>L）：负责数据完整性，安全性的定义与检查以及并发控制，故障恢复等功能。</li><li><strong>数据库系统（DBS）</strong>是指在计算机系统中引入数据库后的系统，一般由数据库、数据库管理系统、应用系统、数据库管理员和用户构成。</li><li>文件系统阶段的缺陷：<br>（1）数据冗余<br>（2）不一致性<br>（3）数据联系弱。</li><li>数据库系统的基本特点：<br>（1）数据的高集成性<br>（2）数据的高共享性和低冗余性<br>（3）数据高独立性<br>（4）数据统一管理与控制。</li><li><strong>数据独立性</strong>是<strong>数据与程序间的互不依赖性</strong>，即数据库中的数据独立于应用程序而不依赖于应用程序。 数据的独立性一般分为物理独立性与逻辑独立性两种。<br>（1）<strong>物理独立性</strong>：<br>当数据的物理结构（包括存储结构、存取方式等）改变时，其逻辑结构，应用程序都不用改变。<br>（2）<strong>逻辑独立性</strong>：<br>数据的逻辑结构改变了，如修改数据模式、增加新的数据类型、改变数据间联系等，用户的应用程序可以不变。</li><li>数据库系统的三级模式<br>（1）<strong>外模式</strong>，外模式也称子模式，它是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，一个概念模式可以有若干个外模式。<br>（2）<strong>概念模式</strong>，也称逻辑模式，是对数据库系统中全局数据逻辑结构的描述，是全体用户公共数据视图。一个数据库只有一个概念模式。<br>（3）<strong>内模式</strong>，内模式又称物理模式，它给出了数据库物理存储结构与物理存取方法。一个数据库只有一个内模式。<br>内模式处于最底层，它反映了数据在计算机物理结构中的实际存储形式，概念模式处于中间层，它反映了设计者的数据全局逻辑要求，而外模式处于最外层，它反映了用户对数据的要求。</li><li>两级映射保证了数据库系统中数据的独立性。</li><li>E-R模型<br>（1）<strong>实体</strong>的表示：用<strong>矩形</strong>表示实体集，在矩形内写上该实体集的名字。<br>（2）<strong>属性</strong>的表示：用<strong>椭圆</strong>形表示属性，在椭圆形内写上该属性的名称。<br>（3）<strong>联系</strong>的表示：用<strong>菱形</strong>表示联系，菱形内写上联系名。</li><li>关系模式采用二维表来表示，(数据模式）由关系<strong>数据结构</strong>，关系<strong>操纵</strong>和关系<strong>完整性约束</strong>3部分组成，在关系数据库中，用来表示实体间联系的是关系。</li><li>在二维表中惟一标识元组的最小属性值称为该表的键或<strong>码</strong>。</li><li>三类数据约束，它们是<strong>实体完整性约束</strong>、<strong>参照完整性约束</strong>以及<strong>用户定义的完整性约束</strong>。其中实体完整性约束、参照完整性约束必须满足的完整性约束条件。参照完整性约束不允许关系应用不存在的元组。实体完整性约束要求关系的主键中属性值不能为空，这是数据库完整性的最基本要求。</li><li>投影：一元运算，对一个关系进行垂直切割，消去某些列。</li><li>除：给定关系R（X，Y）和S（Y，Z），其中X，Y，Z是属性组，R中的Y和S中Y可以有不同的属性名，但必须出自相同的域集。</li><li>自然连接满足的条件是<br>（1）两关系间有公共域<br>（2）通过公共域的相等值进行连接。</li><li><strong>数据库设计</strong><br>①<strong>面向数据</strong>的方法是以信息需求为主，兼顾处理需求；<br>②<strong>面向过程</strong>的方法是以处理需求为主，兼顾信息需求。<br>由于数据在系统中稳定性高，数据已成为系统的核心，故面向数据的设计方法已成为主流。</li><li>数据库设计生命周期：需求分析阶段、概念设计阶段、逻辑设计阶段、物理设计阶段。</li><li>规范化：一个低一级范式的关系模式，通过模式分解转化为若干个高一级范式的关系模式的集合。</li><li><strong>概念结构设计</strong>是将需求分析阶段得到的用户需求抽象为信息结构即概念模型的过程，它是整个数据库设计的<strong>关键</strong>。</li><li>逻辑结构设计的任务是将E—R图转换成关系数据模型的过程。</li><li>常用的存取方法：索引方法，聚簇方法和HASH方法。</li><li>数据库概念设计的过程中，视图设计一般有三种设计次序：<br>①<strong>自顶向下</strong>。这种方法是先从抽象级别高且普遍性强的对象开始逐步细化、具体化与特殊化。<br>②<strong>由底向上</strong>。这种设计方法是先从具体的对象开始，逐步抽象，普遍化与一般化，最后形成一个完整的视图设计。<br>③<strong>由内向外</strong>。这种设计方法是先从最基本与最明显的对象着手逐步扩充至非基本、不明显的其它对象。</li><li><strong>分布式数据库系统</strong>具有<strong>数据分布性</strong>、<strong>逻辑整体性</strong>、<strong>位置透明性</strong>和<strong>复制透明性</strong>的特点。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自&lt;a class=&quot;link&quot; href=&quot;https://zhuanlan.zhihu.com/p/100698395&quot;&gt;知乎&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="文章" scheme="https://me.sunshj.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="总结" scheme="https://me.sunshj.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="分享" scheme="https://me.sunshj.top/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
